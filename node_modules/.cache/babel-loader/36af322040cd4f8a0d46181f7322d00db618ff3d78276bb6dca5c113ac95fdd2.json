{"ast":null,"code":"import { http } from 'msw';\nimport testCases from '../mock-data/test-cases.json';\nimport bugs from '../mock-data/bugs.json';\nexport const handlers = [\n// Mock GET /api/test-cases\nhttp.get('/api/test-cases', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(testCases));\n}),\n// Mock GET /api/bugs\nhttp.get('/api/bugs', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json(bugs));\n}),\n// Mock POST /api/login\nhttp.post('/api/login', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    token: 'mock-token',\n    user: {\n      name: 'Demo User'\n    }\n  }));\n}), http.get('/api/applicationsettings', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    theme: 'dark',\n    notifications: true,\n    testCoverage: 94,\n    assignedTasks: 6,\n    testCasesCreated: 30,\n    bugsReported: 12,\n    automationScripts: 8,\n    failedTests: 2\n    // Add more as needed for your dashboard\n  }));\n}), http.get('/api/activity-logs', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json([{\n    id: 'AL-001',\n    description: 'Manual test run completed',\n    date: '2024-06-01',\n    status: 'Passed'\n  }, {\n    id: 'AL-002',\n    description: 'Automated test failed',\n    date: '2024-06-02',\n    status: 'Failed'\n  }\n  // Add more as needed\n  ]));\n}), http.get('/api/settings/profile', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    name: 'Demo User',\n    email: 'demo@zap.com',\n    role: 'QA',\n    avatar: 'https://ui-avatars.com/api/?name=Demo+User'\n  }));\n}), http.put('/api/settings/profile', (req, res, ctx) => {\n  return res(ctx.status(200));\n}), http.get('/api/dashboard', (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    aiSuggestions: [{\n      id: 1,\n      title: 'Add test coverage for new API endpoint',\n      type: 'coverage',\n      priority: 'high',\n      confidence: '95%'\n    }, {\n      id: 2,\n      title: 'Potential race condition in user authentication',\n      type: 'bug',\n      priority: 'medium',\n      confidence: '80%'\n    }, {\n      id: 3,\n      title: 'Optimize database queries in report generation',\n      type: 'performance',\n      priority: 'low',\n      confidence: '70%'\n    }],\n    recentActivity: [{\n      id: 1,\n      title: 'Login flow test suite',\n      status: 'completed',\n      user: 'John Doe',\n      timestamp: Date.now() - 1000000\n    }, {\n      id: 2,\n      title: 'Payment gateway integration issue',\n      status: 'in_progress',\n      user: 'Jane Smith',\n      timestamp: Date.now() - 500000\n    }, {\n      id: 3,\n      title: 'E2E test suite for checkout flow',\n      status: 'completed',\n      user: 'Mike Johnson',\n      timestamp: Date.now() - 200000\n    }],\n    pendingReviews: [{\n      id: 1,\n      title: 'User profile update tests',\n      type: 'test_case',\n      assignedTo: 'Sarah Wilson',\n      status: 'pending',\n      timestamp: Date.now() - 300000\n    }, {\n      id: 2,\n      title: 'Mobile responsive layout issue',\n      type: 'bug',\n      assignedTo: 'Tom Brown',\n      status: 'pending',\n      timestamp: Date.now() - 400000\n    }, {\n      id: 3,\n      title: 'API regression suite',\n      type: 'automation',\n      assignedTo: 'Mike Johnson',\n      status: 'pending',\n      timestamp: Date.now() - 600000\n    }],\n    quickStats: {\n      assignedTasks: 6,\n      testCasesCreated: 30,\n      bugsReported: 12,\n      testCoverage: 94,\n      automationScripts: 8,\n      failedTests: 2\n    },\n    roleBasedStats: {\n      developer: {\n        assignedTasks: 4,\n        completedTasks: 3,\n        codeCoverage: 87,\n        openPRs: 2,\n        codeReviews: 5\n      },\n      qa: {\n        assignedTasks: 6,\n        testCasesCreated: 30,\n        bugsReported: 12,\n        testCoverage: 94,\n        automationScripts: 8,\n        failedTests: 2\n      },\n      pm: {\n        assignedTasks: 2,\n        activeSprints: 1,\n        completedSprints: 3,\n        teamVelocity: 21,\n        riskItems: 1,\n        blockers: 0\n      }\n    }\n  }));\n})\n\n// Add more handlers as needed...\n];","map":{"version":3,"names":["http","testCases","bugs","handlers","get","req","res","ctx","status","json","post","token","user","name","theme","notifications","testCoverage","assignedTasks","testCasesCreated","bugsReported","automationScripts","failedTests","id","description","date","email","role","avatar","put","aiSuggestions","title","type","priority","confidence","recentActivity","timestamp","Date","now","pendingReviews","assignedTo","quickStats","roleBasedStats","developer","completedTasks","codeCoverage","openPRs","codeReviews","qa","pm","activeSprints","completedSprints","teamVelocity","riskItems","blockers"],"sources":["/Users/pournima/Documents/Zap Release 1/ZapDashboard/zap-prototype/src/mocks/handlers.js"],"sourcesContent":["import { http } from 'msw';\nimport testCases from '../mock-data/test-cases.json';\nimport bugs from '../mock-data/bugs.json';\n\nexport const handlers = [\n  // Mock GET /api/test-cases\n  http.get('/api/test-cases', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(testCases));\n  }),\n\n  // Mock GET /api/bugs\n  http.get('/api/bugs', (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json(bugs));\n  }),\n\n  // Mock POST /api/login\n  http.post('/api/login', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({ token: 'mock-token', user: { name: 'Demo User' } })\n    );\n  }),\n\n  http.get('/api/applicationsettings', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        theme: 'dark',\n        notifications: true,\n        testCoverage: 94,\n        assignedTasks: 6,\n        testCasesCreated: 30,\n        bugsReported: 12,\n        automationScripts: 8,\n        failedTests: 2,\n        // Add more as needed for your dashboard\n      })\n    );\n  }),\n\n  http.get('/api/activity-logs', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json([\n        { id: 'AL-001', description: 'Manual test run completed', date: '2024-06-01', status: 'Passed' },\n        { id: 'AL-002', description: 'Automated test failed', date: '2024-06-02', status: 'Failed' },\n        // Add more as needed\n      ])\n    );\n  }),\n\n  http.get('/api/settings/profile', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        name: 'Demo User',\n        email: 'demo@zap.com',\n        role: 'QA',\n        avatar: 'https://ui-avatars.com/api/?name=Demo+User'\n      })\n    );\n  }),\n\n  http.put('/api/settings/profile', (req, res, ctx) => {\n    return res(ctx.status(200));\n  }),\n\n  http.get('/api/dashboard', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        aiSuggestions: [\n          { id: 1, title: 'Add test coverage for new API endpoint', type: 'coverage', priority: 'high', confidence: '95%' },\n          { id: 2, title: 'Potential race condition in user authentication', type: 'bug', priority: 'medium', confidence: '80%' },\n          { id: 3, title: 'Optimize database queries in report generation', type: 'performance', priority: 'low', confidence: '70%' },\n        ],\n        recentActivity: [\n          { id: 1, title: 'Login flow test suite', status: 'completed', user: 'John Doe', timestamp: Date.now() - 1000000 },\n          { id: 2, title: 'Payment gateway integration issue', status: 'in_progress', user: 'Jane Smith', timestamp: Date.now() - 500000 },\n          { id: 3, title: 'E2E test suite for checkout flow', status: 'completed', user: 'Mike Johnson', timestamp: Date.now() - 200000 },\n        ],\n        pendingReviews: [\n          { id: 1, title: 'User profile update tests', type: 'test_case', assignedTo: 'Sarah Wilson', status: 'pending', timestamp: Date.now() - 300000 },\n          { id: 2, title: 'Mobile responsive layout issue', type: 'bug', assignedTo: 'Tom Brown', status: 'pending', timestamp: Date.now() - 400000 },\n          { id: 3, title: 'API regression suite', type: 'automation', assignedTo: 'Mike Johnson', status: 'pending', timestamp: Date.now() - 600000 },\n        ],\n        quickStats: {\n          assignedTasks: 6,\n          testCasesCreated: 30,\n          bugsReported: 12,\n          testCoverage: 94,\n          automationScripts: 8,\n          failedTests: 2,\n        },\n        roleBasedStats: {\n          developer: {\n            assignedTasks: 4,\n            completedTasks: 3,\n            codeCoverage: 87,\n            openPRs: 2,\n            codeReviews: 5,\n          },\n          qa: {\n            assignedTasks: 6,\n            testCasesCreated: 30,\n            bugsReported: 12,\n            testCoverage: 94,\n            automationScripts: 8,\n            failedTests: 2,\n          },\n          pm: {\n            assignedTasks: 2,\n            activeSprints: 1,\n            completedSprints: 3,\n            teamVelocity: 21,\n            riskItems: 1,\n            blockers: 0,\n          }\n        }\n      })\n    );\n  }),\n\n  // Add more handlers as needed...\n];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}