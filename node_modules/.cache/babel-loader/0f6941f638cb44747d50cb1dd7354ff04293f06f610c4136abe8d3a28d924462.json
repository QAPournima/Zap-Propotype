{"ast":null,"code":"var _jsxFileName = \"/Users/pournima/Documents/Zap Release 1/ZapDashboard/zap-prototype/src/pages/MySprint.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { settingsService } from '../services/api';\nimport Modal from '../components/Modal';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STATUS_OPTIONS = ['To Do', 'In Progress', 'Done'];\nconst ACTION_OPTIONS = ['Create Test Case', 'Create Bug', 'Create Sub Task'];\nconst EXECUTE_OPTIONS = ['Yes', 'No'];\nconst AUTOMATION_OPTIONS = ['Yes', 'No'];\nconst PROJECT_OPTIONS = ['Smoke', 'Sanity', 'Regression', 'None'];\n\n// Column config for visibility toggle\nconst ALL_COLUMNS = [{\n  key: 'id',\n  label: 'ID',\n  default: true\n}, {\n  key: 'summary',\n  label: 'Summary',\n  default: true\n}, {\n  key: 'type',\n  label: 'Type',\n  default: true\n}, {\n  key: 'status',\n  label: 'Status',\n  default: true\n}, {\n  key: 'assignee',\n  label: 'Assignee',\n  default: true\n}, {\n  key: 'action',\n  label: 'Action',\n  default: true\n}, {\n  key: 'jiraId',\n  label: 'Jira id',\n  default: true\n}, {\n  key: 'executeTest',\n  label: 'Execute Test',\n  default: true\n}];\nexport default function MySprint() {\n  _s();\n  console.log('MySprint component rendered');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sprint, setSprint] = useState(null);\n  const [editIssues, setEditIssues] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const [saveMsg, setSaveMsg] = useState('');\n  const [extraFields, setExtraFields] = useState([]);\n  const [processingRows, setProcessingRows] = useState({});\n  const [rowError, setRowError] = useState({});\n  const [mysprintActions, setMySprintActions] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalInput, setModalInput] = useState('');\n  const [pendingAction, setPendingAction] = useState(null);\n  const [pendingIdx, setPendingIdx] = useState(null);\n  const navigate = useNavigate();\n  const [redirectMsg, setRedirectMsg] = useState('');\n  const [visibleColumns, setVisibleColumns] = useState(ALL_COLUMNS.filter(col => col.default).map(col => col.key));\n  const [colDropdownOpen, setColDropdownOpen] = useState(false);\n  const colDropdownRef = useRef();\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10;\n  const totalPages = Math.ceil(editIssues.length / rowsPerPage);\n  const paginatedRows = editIssues.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState('');\n  useEffect(() => {\n    fetchJiraProjects();\n    // Fetch current projectId from settings and set as selected\n    settingsService.getApplicationSettings().then(appSettings => {\n      var _appSettings$jira, _appSettings$jira2;\n      setSelectedProject((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$jira = appSettings.jira) === null || _appSettings$jira === void 0 ? void 0 : _appSettings$jira.projectId) || '');\n      if (appSettings !== null && appSettings !== void 0 && (_appSettings$jira2 = appSettings.jira) !== null && _appSettings$jira2 !== void 0 && _appSettings$jira2.projectId) {\n        fetchSprintForProject(appSettings.jira.projectId);\n      }\n    }).catch(err => {\n      setError('Please check your project integration and try again.');\n    });\n  }, []);\n  useEffect(() => {\n    const fetchSprint = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        var _appSettings$jira3;\n        const appSettings = await settingsService.getApplicationSettings();\n        const projectId = appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$jira3 = appSettings.jira) === null || _appSettings$jira3 === void 0 ? void 0 : _appSettings$jira3.projectId;\n        if (!projectId) throw new Error('No Jira projectId found in settings');\n        const [sprintRes, actionsRes] = await Promise.all([fetch(`/api/jira/projects/${projectId}/sprint/current`), fetch('/api/mysprint-actions')]);\n        if (!sprintRes.ok) throw new Error('Failed to fetch sprint');\n        const sprintData = await sprintRes.json();\n        const actionsData = actionsRes.ok ? await actionsRes.json() : [];\n        setMySprintActions(actionsData);\n        const mergedExtraFields = (sprintData.issues || []).map(issue => {\n          const found = actionsData.filter(a => a.parentKey === issue.id);\n          const jiraIds = found.map(a => a.jiraId).filter(Boolean);\n          return {\n            action: '',\n            jiraId: jiraIds.join(','),\n            jiraIdList: jiraIds,\n            executeTest: '',\n            automationTest: '',\n            automationProject: ''\n          };\n        });\n        setSprint(sprintData);\n        setEditIssues(sprintData.issues || []);\n        setExtraFields(mergedExtraFields);\n        setProcessingRows({});\n        setRowError({});\n      } catch (err) {\n        setError(err.message || 'Failed to load sprint');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSprint();\n  }, []);\n\n  // Close dropdown on click outside\n  useEffect(() => {\n    function handleClick(e) {\n      if (colDropdownRef.current && !colDropdownRef.current.contains(e.target)) {\n        setColDropdownOpen(false);\n      }\n    }\n    if (colDropdownOpen) {\n      document.addEventListener('mousedown', handleClick);\n    } else {\n      document.removeEventListener('mousedown', handleClick);\n    }\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [colDropdownOpen]);\n  const handleIssueChange = (idx, field, value) => {\n    setEditIssues(issues => issues.map((issue, i) => i === idx ? {\n      ...issue,\n      [field]: value\n    } : issue));\n  };\n  const handleExtraChange = async (idx, field, value) => {\n    setExtraFields(fields => fields.map((f, i) => i === idx ? {\n      ...f,\n      [field]: value\n    } : f));\n    if (['Create Bug', 'Create Sub Task'].includes(value)) {\n      setPendingAction(value);\n      setPendingIdx(idx);\n      setModalOpen(true);\n      return;\n    }\n    if (field === 'action' && ['Create Test Case', 'Create Bug', 'Create Sub Task'].includes(value)) {\n      setProcessingRows(rows => ({\n        ...rows,\n        [idx]: true\n      }));\n      setRowError(errs => ({\n        ...errs,\n        [idx]: undefined\n      }));\n      try {\n        var _editIssues$idx;\n        const issueKey = (_editIssues$idx = editIssues[idx]) === null || _editIssues$idx === void 0 ? void 0 : _editIssues$idx.id;\n        const res = await fetch('/api/ai/create-issue', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            issueKey,\n            action: value\n          })\n        });\n        if (!res.ok) throw new Error((await res.json()).error || 'Failed to create issue');\n        const data = await res.json();\n        setExtraFields(fields => fields.map((f, i) => i === idx ? {\n          ...f,\n          jiraId: data.jiraId,\n          jiraIdList: f.jiraIdList ? [...f.jiraIdList, data.jiraId] : [data.jiraId]\n        } : f));\n        setProcessingRows(rows => {\n          const updated = {\n            ...rows\n          };\n          delete updated[idx];\n          return updated;\n        });\n      } catch (err) {\n        setRowError(errs => ({\n          ...errs,\n          [idx]: 'Failed to create issue. Retry?'\n        }));\n        setProcessingRows(rows => {\n          const updated = {\n            ...rows\n          };\n          delete updated[idx];\n          return updated;\n        });\n      }\n    }\n  };\n  const handleModalSubmit = async () => {\n    if (pendingAction && pendingIdx !== null) {\n      setModalOpen(false);\n      setProcessingRows(rows => ({\n        ...rows,\n        [pendingIdx]: true\n      }));\n      setRowError(errs => ({\n        ...errs,\n        [pendingIdx]: undefined\n      }));\n      try {\n        var _editIssues$pendingId;\n        const issueKey = (_editIssues$pendingId = editIssues[pendingIdx]) === null || _editIssues$pendingId === void 0 ? void 0 : _editIssues$pendingId.id;\n        const res = await fetch('/api/ai/create-issue', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            issueKey,\n            action: pendingAction,\n            userInput: modalInput\n          })\n        });\n        if (!res.ok) throw new Error((await res.json()).error || 'Failed to create issue');\n        const data = await res.json();\n        setExtraFields(fields => fields.map((f, i) => i === pendingIdx ? {\n          ...f,\n          jiraId: data.jiraId,\n          jiraIdList: f.jiraIdList ? [...f.jiraIdList, data.jiraId] : [data.jiraId]\n        } : f));\n      } catch (err) {\n        setRowError(errs => ({\n          ...errs,\n          [pendingIdx]: 'Failed to create issue. Retry?'\n        }));\n      } finally {\n        setProcessingRows(rows => {\n          const updated = {\n            ...rows\n          };\n          delete updated[pendingIdx];\n          return updated;\n        });\n        setModalInput('');\n        setPendingAction(null);\n        setPendingIdx(null);\n      }\n    }\n  };\n  const handleSave = async () => {\n    setSaving(true);\n    setSaveMsg('');\n    try {\n      for (let i = 0; i < editIssues.length; i++) {\n        const issue = editIssues[i];\n        await fetch('/api/jira/issues/' + issue.id, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            status: issue.status,\n            assignee: issue.assignee\n          })\n        });\n      }\n      setSaveMsg('Jira issues updated!');\n      setTimeout(() => setSaveMsg(''), 2000);\n    } catch (err) {\n      setSaveMsg('Failed to update Jira issues');\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleExecuteTestChange = async (idx, value) => {\n    setExtraFields(fields => fields.map((f, i) => {\n      var _editIssues$i;\n      const type = (((_editIssues$i = editIssues[i]) === null || _editIssues$i === void 0 ? void 0 : _editIssues$i.type) || '').toLowerCase();\n      if (i === idx && type === 'test') {\n        var _editIssues$i2, _editIssues$i3;\n        return {\n          ...f,\n          executeTest: value,\n          jiraId: (_editIssues$i2 = editIssues[i]) === null || _editIssues$i2 === void 0 ? void 0 : _editIssues$i2.id,\n          jiraIdList: [(_editIssues$i3 = editIssues[i]) === null || _editIssues$i3 === void 0 ? void 0 : _editIssues$i3.id]\n        };\n      }\n      return i === idx ? {\n        ...f,\n        executeTest: value\n      } : f;\n    }));\n    if (value === 'Yes') {\n      var _editIssues$idx2, _editIssues$idx3, _extraFields$idx, _extraFields$idx$jira, _editIssues$idx4;\n      const type = (((_editIssues$idx2 = editIssues[idx]) === null || _editIssues$idx2 === void 0 ? void 0 : _editIssues$idx2.type) || '').toLowerCase();\n      const jiraId = type === 'test' ? (_editIssues$idx3 = editIssues[idx]) === null || _editIssues$idx3 === void 0 ? void 0 : _editIssues$idx3.id : ((_extraFields$idx = extraFields[idx]) === null || _extraFields$idx === void 0 ? void 0 : (_extraFields$idx$jira = _extraFields$idx.jiraIdList) === null || _extraFields$idx$jira === void 0 ? void 0 : _extraFields$idx$jira[0]) || 'NO_ID';\n      const testCaseName = encodeURIComponent(((_editIssues$idx4 = editIssues[idx]) === null || _editIssues$idx4 === void 0 ? void 0 : _editIssues$idx4.summary) || '');\n      navigate(`/live-test/${jiraId}?fromMySprint=1&name=${testCaseName}&manual=1`);\n    }\n  };\n\n  // Add handler for project change\n  const handleProjectChange = async e => {\n    const projectId = e.target.value;\n    setSelectedProject(projectId);\n    if (projectId) {\n      const res = await fetch('/api/jira/project', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        // Fetch the latest projectId from settings to ensure sync\n        settingsService.getApplicationSettings().then(appSettings => {\n          var _appSettings$jira4;\n          const latestProjectId = (appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$jira4 = appSettings.jira) === null || _appSettings$jira4 === void 0 ? void 0 : _appSettings$jira4.projectId) || projectId;\n          fetchSprintForProject(latestProjectId);\n        });\n      }\n    }\n  };\n\n  // Helper to fetch sprint for a given projectId\n  const fetchSprintForProject = async projectId => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [sprintRes, actionsRes] = await Promise.all([fetch(`/api/jira/projects/${projectId}/sprint/current`), fetch('/api/mysprint-actions')]);\n      if (!sprintRes.ok) throw new Error('Failed to fetch sprint');\n      const sprintData = await sprintRes.json();\n      const actionsData = actionsRes.ok ? await actionsRes.json() : [];\n      setMySprintActions(actionsData);\n      const mergedExtraFields = (sprintData.issues || []).map(issue => {\n        const found = actionsData.filter(a => a.parentKey === issue.id);\n        const jiraIds = found.map(a => a.jiraId).filter(Boolean);\n        return {\n          action: '',\n          jiraId: jiraIds.join(','),\n          jiraIdList: jiraIds,\n          executeTest: '',\n          automationTest: '',\n          automationProject: ''\n        };\n      });\n      setSprint(sprintData);\n      setEditIssues(sprintData.issues || []);\n      setExtraFields(mergedExtraFields);\n      setProcessingRows({});\n      setRowError({});\n    } catch (err) {\n      setError(err.message || 'Failed to load sprint');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to retry fetching settings and sprint\n  const retryFetchSettings = () => {\n    setError(null);\n    setLoading(true);\n    fetchJiraProjects();\n    settingsService.getApplicationSettings().then(appSettings => {\n      var _appSettings$jira5, _appSettings$jira6;\n      setSelectedProject((appSettings === null || appSettings === void 0 ? void 0 : (_appSettings$jira5 = appSettings.jira) === null || _appSettings$jira5 === void 0 ? void 0 : _appSettings$jira5.projectId) || '');\n      if (appSettings !== null && appSettings !== void 0 && (_appSettings$jira6 = appSettings.jira) !== null && _appSettings$jira6 !== void 0 && _appSettings$jira6.projectId) {\n        fetchSprintForProject(appSettings.jira.projectId);\n      }\n    }).catch(err => {\n      setError('Please check your project integration and try again.');\n    }).finally(() => setLoading(false));\n  };\n\n  // Add new function fetchJiraProjects\n  const fetchJiraProjects = () => {\n    fetch('/api/jira/projects').then(res => {\n      if (!res.ok) throw new Error('Network response was not ok: ' + res.status);\n      return res.json();\n    }).then(data => setProjects(data)).catch(err => {\n      setProjects([]);\n    });\n  };\n  console.log('Projects state before render:', projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white text-gray-900 dark:bg-neutral-900 dark:text-gray-100 flex flex-col p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-8 pt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-8\",\n        children: \"My Sprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), console.log('Dropdown projects:', projects), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"jira-project-select\",\n          style: {\n            marginRight: 8\n          },\n          children: \"Jira Project:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"jira-project-select\",\n          value: selectedProject,\n          onChange: handleProjectChange,\n          className: \"rounded px-3 py-2 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n          style: {\n            minWidth: 220\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Jira Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), projects.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p.key,\n            children: [p.name, \" (\", p.key, \")\"]\n          }, p.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 dark:text-gray-300\",\n        children: \"Loading current sprint...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-lg flex flex-col items-start gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-2xl\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: retryFetchSettings,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded shadow hover:bg-blue-700\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this) : sprint ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 p-4 rounded-lg bg-neutral-100 dark:bg-neutral-800 border border-neutral-200 dark:border-neutral-700 shadow-sm w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl font-bold text-blue-600 dark:text-blue-300\",\n              children: sprint.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `px-3 py-1 rounded-full text-xs font-semibold ml-2 ${sprint.state === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : 'bg-gray-200 text-gray-800 dark:bg-neutral-700 dark:text-gray-200'}`,\n              children: sprint.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center gap-6 text-gray-700 dark:text-gray-200 mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Start: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: sprint.startDate ? new Date(sprint.startDate).toLocaleDateString() : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"End: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: sprint.endDate ? new Date(sprint.endDate).toLocaleDateString() : '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 dark:text-gray-400 text-sm mt-2\",\n            children: [\"Goal: \", sprint.goal || 'No goal set for this sprint.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 dark:text-gray-300\",\n        children: \"No active sprint found for your project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), sprint && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen ml-8 mr-8 pr-12 overflow-x-auto mt-12 mb-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-gray-200 dark:bg-neutral-800 rounded shadow text-gray-900 dark:text-gray-100 font-semibold hover:bg-gray-300 dark:hover:bg-neutral-700\",\n          onClick: () => setColDropdownOpen(v => !v),\n          children: \"Columns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), colDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: colDropdownRef,\n          className: \"absolute left-0 mt-2 bg-white dark:bg-neutral-900 border border-gray-300 dark:border-neutral-700 rounded shadow-lg z-50 p-4 min-w-[200px]\",\n          children: ALL_COLUMNS.map(col => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center gap-2 py-1 cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: visibleColumns.includes(col.key),\n              onChange: e => {\n                if (e.target.checked) {\n                  setVisibleColumns(cols => [...cols, col.key]);\n                } else {\n                  setVisibleColumns(cols => cols.filter(k => k !== col.key));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: col.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 21\n            }, this)]\n          }, col.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200 dark:divide-neutral-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-50 dark:bg-neutral-900\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [ALL_COLUMNS.filter(col => visibleColumns.includes(col.key)).map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: `px-4 py-2 text-left font-semibold ${['id', 'summary', 'type', 'status', 'assignee'].includes(col.key) ? 'bg-[#1A1E1D] text-white' : ''}`,\n              children: col.label\n            }, col.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"w-11\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"bg-white dark:bg-neutral-900 divide-y divide-gray-200 dark:divide-neutral-700\",\n          children: paginatedRows.map((issue, idx) => {\n            // Determine allowed actions based on issue type\n            let allowedActions = [];\n            let actionDisabled = false;\n            let executeTestDisabled = false;\n            let jiraIdEditable = false;\n            const type = (issue.type || '').toLowerCase();\n            if (type === 'user story' || type === 'story') {\n              allowedActions = ACTION_OPTIONS;\n            } else if (type === 'bug') {\n              allowedActions = ['Create Sub Task'];\n            } else if (type === 'task') {\n              allowedActions = ['Create Bug', 'Create Sub Task'];\n            } else if (type === 'test') {\n              allowedActions = [];\n              actionDisabled = true;\n              jiraIdEditable = true;\n            } else {\n              allowedActions = [];\n              actionDisabled = true;\n            }\n            // For Test type, allow Execute Test, for others keep as is\n            if (type === 'test') {\n              executeTestDisabled = false;\n            }\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50 dark:hover:bg-neutral-700 transition-colors\",\n              children: [ALL_COLUMNS.filter(col => visibleColumns.includes(col.key)).map(col => {\n                var _extraFields$idx2, _extraFields$idx3, _extraFields$idx4, _extraFields$idx5;\n                switch (col.key) {\n                  case 'id':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 font-mono bg-[#1A1E1D] text-white\",\n                      children: issue.id\n                    }, \"id\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 34\n                    }, this);\n                  case 'summary':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 whitespace-normal break-words max-w-xs bg-[#1A1E1D] text-white\",\n                      children: issue.summary\n                    }, \"summary\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 34\n                    }, this);\n                  case 'type':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 bg-[#1A1E1D] text-white\",\n                      children: issue.type\n                    }, \"type\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 34\n                    }, this);\n                  case 'status':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 bg-[#1A1E1D] text-white\",\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-[#1A1E1D] text-white dark:bg-neutral-900 dark:text-gray-100\",\n                        value: issue.status,\n                        onChange: e => handleIssueChange(idx, 'status', e.target.value),\n                        children: STATUS_OPTIONS.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: opt,\n                          children: opt\n                        }, opt, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 490,\n                          columnNumber: 58\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 29\n                      }, this)\n                    }, \"status\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 34\n                    }, this);\n                  case 'assignee':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 bg-[#1A1E1D] text-white\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-[#1A1E1D] text-white dark:bg-neutral-900 dark:text-gray-100\",\n                        value: issue.assignee,\n                        onChange: e => handleIssueChange(idx, 'assignee', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, this)\n                    }, \"assignee\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 34\n                    }, this);\n                  case 'action':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100\",\n                        value: ((_extraFields$idx2 = extraFields[idx]) === null || _extraFields$idx2 === void 0 ? void 0 : _extraFields$idx2.action) || '',\n                        onChange: e => handleExtraChange(idx, 'action', e.target.value),\n                        disabled: actionDisabled || allowedActions.length === 0,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 31\n                        }, this), allowedActions.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: opt,\n                          children: opt\n                        }, opt, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 510,\n                          columnNumber: 58\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 29\n                      }, this)\n                    }, \"action\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 34\n                    }, this);\n                  case 'jiraId':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2 whitespace-normal break-words max-w-xs\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex flex-wrap items-center gap-2\",\n                        children: [(_extraFields$idx3 = extraFields[idx]) !== null && _extraFields$idx3 !== void 0 && _extraFields$idx3.jiraIdList && extraFields[idx].jiraIdList.length > 0 ? extraFields[idx].jiraIdList.map((id, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                            href: `https://your-domain.atlassian.net/browse/${id}`,\n                            target: \"_blank\",\n                            rel: \"noopener noreferrer\",\n                            className: \"text-blue-600 underline dark:text-blue-300\",\n                            children: id\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 519,\n                            columnNumber: 37\n                          }, this), i < extraFields[idx].jiraIdList.length - 1 && ((i + 1) % 3 === 0 ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 527,\n                            columnNumber: 107\n                          }, this) : ', ')]\n                        }, id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 518,\n                          columnNumber: 35\n                        }, this)) : /*#__PURE__*/_jsxDEV(\"input\", {\n                          className: `rounded px-2 py-1 border bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100 ${processingRows[idx] ? 'border-blue-400 bg-blue-50 dark:bg-blue-950 animate-pulse' : 'border-gray-300 dark:border-neutral-700'} ${rowError[idx] ? 'border-red-500 bg-red-50 dark:bg-red-900' : ''}`,\n                          value: ((_extraFields$idx4 = extraFields[idx]) === null || _extraFields$idx4 === void 0 ? void 0 : _extraFields$idx4.jiraId) || '',\n                          onChange: e => handleExtraChange(idx, 'jiraId', e.target.value),\n                          disabled: processingRows[idx] || !jiraIdEditable && !processingRows[idx]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 531,\n                          columnNumber: 33\n                        }, this), processingRows[idx] && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 33\n                        }, this), rowError[idx] && /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"text-xs text-red-500 underline ml-2\",\n                          onClick: () => handleExtraChange(idx, 'action', 'Create Test Case'),\n                          children: \"Retry\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 542,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 29\n                      }, this)\n                    }, \"jiraId\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 34\n                    }, this);\n                  case 'executeTest':\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-4 py-2\",\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100\",\n                        value: ((_extraFields$idx5 = extraFields[idx]) === null || _extraFields$idx5 === void 0 ? void 0 : _extraFields$idx5.executeTest) || '',\n                        onChange: e => handleExecuteTestChange(idx, e.target.value),\n                        disabled: type !== 'test' && false,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 557,\n                          columnNumber: 31\n                        }, this), EXECUTE_OPTIONS.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: opt,\n                          children: opt\n                        }, opt, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 59\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 29\n                      }, this)\n                    }, \"executeTest\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 34\n                    }, this);\n                  default:\n                    return null;\n                }\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"w-11\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this)]\n            }, issue.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4 mt-8 items-center ml-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-6 py-2 rounded bg-blue-500 text-white font-semibold hover:bg-blue-600 disabled:opacity-60 shadow\",\n          onClick: handleSave,\n          disabled: saving,\n          children: saving ? 'Saving...' : 'Save Sprint'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), saveMsg && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-green-400 dark:text-green-300\",\n          children: saveMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), redirectMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-500 font-semibold my-4 ml-8\",\n        children: redirectMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center gap-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\",\n          onClick: () => setCurrentPage(1),\n          disabled: currentPage === 1,\n          \"aria-label\": \"First Page\",\n          children: \"\\xAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\",\n          onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n          disabled: currentPage === 1,\n          \"aria-label\": \"Previous Page\",\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), Array.from({\n          length: totalPages\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1 rounded ${currentPage === i + 1 ? 'bg-blue-500 text-white dark:bg-blue-600 dark:text-white' : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600'}`,\n          onClick: () => setCurrentPage(i + 1),\n          children: i + 1\n        }, i + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\",\n          onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n          disabled: currentPage === totalPages,\n          \"aria-label\": \"Next Page\",\n          children: \"\\u203A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\",\n          onClick: () => setCurrentPage(totalPages),\n          disabled: currentPage === totalPages,\n          \"aria-label\": \"Last Page\",\n          children: \"\\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: () => setModalOpen(false),\n      title: pendingAction,\n      width: \"max-w-xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full border rounded p-2 mb-4 bg-white dark:bg-neutral-800 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-neutral-700 placeholder-gray-400 dark:placeholder-gray-400\",\n        rows: 6,\n        placeholder: `Enter details for ${pendingAction}...`,\n        value: modalInput,\n        onChange: e => setModalInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), modalInput.trim().length < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-sm mb-2\",\n        children: \"Please enter at least 100 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4 justify-end mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 rounded bg-gray-300 text-gray-800 dark:bg-neutral-700 dark:text-gray-100\",\n          onClick: () => setModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 rounded bg-blue-600 text-white\",\n          onClick: handleModalSubmit,\n          disabled: modalInput.trim().length < 100,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n_s(MySprint, \"DLaYFAP2CNJ+/641oTpo1ORyhlc=\", false, function () {\n  return [useNavigate];\n});\n_c = MySprint;\nvar _c;\n$RefreshReg$(_c, \"MySprint\");","map":{"version":3,"names":["React","useEffect","useState","useRef","settingsService","Modal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","STATUS_OPTIONS","ACTION_OPTIONS","EXECUTE_OPTIONS","AUTOMATION_OPTIONS","PROJECT_OPTIONS","ALL_COLUMNS","key","label","default","MySprint","_s","console","log","loading","setLoading","error","setError","sprint","setSprint","editIssues","setEditIssues","saving","setSaving","saveMsg","setSaveMsg","extraFields","setExtraFields","processingRows","setProcessingRows","rowError","setRowError","mysprintActions","setMySprintActions","modalOpen","setModalOpen","modalInput","setModalInput","pendingAction","setPendingAction","pendingIdx","setPendingIdx","navigate","redirectMsg","setRedirectMsg","visibleColumns","setVisibleColumns","filter","col","map","colDropdownOpen","setColDropdownOpen","colDropdownRef","currentPage","setCurrentPage","rowsPerPage","totalPages","Math","ceil","length","paginatedRows","slice","projects","setProjects","selectedProject","setSelectedProject","fetchJiraProjects","getApplicationSettings","then","appSettings","_appSettings$jira","_appSettings$jira2","jira","projectId","fetchSprintForProject","catch","err","fetchSprint","_appSettings$jira3","Error","sprintRes","actionsRes","Promise","all","fetch","ok","sprintData","json","actionsData","mergedExtraFields","issues","issue","found","a","parentKey","id","jiraIds","jiraId","Boolean","action","join","jiraIdList","executeTest","automationTest","automationProject","message","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","handleIssueChange","idx","field","value","i","handleExtraChange","fields","f","includes","rows","errs","undefined","_editIssues$idx","issueKey","res","method","headers","body","JSON","stringify","data","updated","handleModalSubmit","_editIssues$pendingId","userInput","handleSave","status","assignee","setTimeout","handleExecuteTestChange","_editIssues$i","type","toLowerCase","_editIssues$i2","_editIssues$i3","_editIssues$idx2","_editIssues$idx3","_extraFields$idx","_extraFields$idx$jira","_editIssues$idx4","testCaseName","encodeURIComponent","summary","handleProjectChange","success","_appSettings$jira4","latestProjectId","retryFetchSettings","_appSettings$jira5","_appSettings$jira6","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","htmlFor","marginRight","onChange","minWidth","p","name","onClick","state","startDate","Date","toLocaleDateString","endDate","goal","v","ref","checked","cols","k","allowedActions","actionDisabled","executeTestDisabled","jiraIdEditable","_extraFields$idx2","_extraFields$idx3","_extraFields$idx4","_extraFields$idx5","opt","disabled","href","rel","max","Array","from","_","min","open","onClose","title","width","placeholder","trim","_c","$RefreshReg$"],"sources":["/Users/pournima/Documents/Zap Release 1/ZapDashboard/zap-prototype/src/pages/MySprint.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { settingsService } from '../services/api';\nimport Modal from '../components/Modal';\nimport { useNavigate } from 'react-router-dom';\n\nconst STATUS_OPTIONS = ['To Do', 'In Progress', 'Done'];\nconst ACTION_OPTIONS = ['Create Test Case', 'Create Bug', 'Create Sub Task'];\nconst EXECUTE_OPTIONS = ['Yes', 'No'];\nconst AUTOMATION_OPTIONS = ['Yes', 'No'];\nconst PROJECT_OPTIONS = ['Smoke', 'Sanity', 'Regression', 'None'];\n\n// Column config for visibility toggle\nconst ALL_COLUMNS = [\n  { key: 'id', label: 'ID', default: true },\n  { key: 'summary', label: 'Summary', default: true },\n  { key: 'type', label: 'Type', default: true },\n  { key: 'status', label: 'Status', default: true },\n  { key: 'assignee', label: 'Assignee', default: true },\n  { key: 'action', label: 'Action', default: true },\n  { key: 'jiraId', label: 'Jira id', default: true },\n  { key: 'executeTest', label: 'Execute Test', default: true },\n];\n\nexport default function MySprint() {\n  console.log('MySprint component rendered');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sprint, setSprint] = useState(null);\n  const [editIssues, setEditIssues] = useState([]);\n  const [saving, setSaving] = useState(false);\n  const [saveMsg, setSaveMsg] = useState('');\n  const [extraFields, setExtraFields] = useState([]);\n  const [processingRows, setProcessingRows] = useState({});\n  const [rowError, setRowError] = useState({});\n  const [mysprintActions, setMySprintActions] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalInput, setModalInput] = useState('');\n  const [pendingAction, setPendingAction] = useState(null);\n  const [pendingIdx, setPendingIdx] = useState(null);\n  const navigate = useNavigate();\n  const [redirectMsg, setRedirectMsg] = useState('');\n  const [visibleColumns, setVisibleColumns] = useState(\n    ALL_COLUMNS.filter(col => col.default).map(col => col.key)\n  );\n  const [colDropdownOpen, setColDropdownOpen] = useState(false);\n  const colDropdownRef = useRef();\n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10;\n  const totalPages = Math.ceil(editIssues.length / rowsPerPage);\n  const paginatedRows = editIssues.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState('');\n\n  useEffect(() => {\n    fetchJiraProjects();\n    // Fetch current projectId from settings and set as selected\n    settingsService.getApplicationSettings()\n      .then(appSettings => {\n        setSelectedProject(appSettings?.jira?.projectId || '');\n        if (appSettings?.jira?.projectId) {\n          fetchSprintForProject(appSettings.jira.projectId);\n        }\n      })\n      .catch(err => {\n        setError('Please check your project integration and try again.');\n      });\n  }, []);\n\n  useEffect(() => {\n    const fetchSprint = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const appSettings = await settingsService.getApplicationSettings();\n        const projectId = appSettings?.jira?.projectId;\n        if (!projectId) throw new Error('No Jira projectId found in settings');\n        const [sprintRes, actionsRes] = await Promise.all([\n          fetch(`/api/jira/projects/${projectId}/sprint/current`),\n          fetch('/api/mysprint-actions')\n        ]);\n        if (!sprintRes.ok) throw new Error('Failed to fetch sprint');\n        const sprintData = await sprintRes.json();\n        const actionsData = actionsRes.ok ? await actionsRes.json() : [];\n        setMySprintActions(actionsData);\n        const mergedExtraFields = (sprintData.issues || []).map(issue => {\n          const found = actionsData.filter(a => a.parentKey === issue.id);\n          const jiraIds = found.map(a => a.jiraId).filter(Boolean);\n          return {\n            action: '',\n            jiraId: jiraIds.join(','),\n            jiraIdList: jiraIds,\n            executeTest: '',\n            automationTest: '',\n            automationProject: ''\n          };\n        });\n        setSprint(sprintData);\n        setEditIssues(sprintData.issues || []);\n        setExtraFields(mergedExtraFields);\n        setProcessingRows({});\n        setRowError({});\n      } catch (err) {\n        setError(err.message || 'Failed to load sprint');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSprint();\n  }, []);\n\n  // Close dropdown on click outside\n  useEffect(() => {\n    function handleClick(e) {\n      if (colDropdownRef.current && !colDropdownRef.current.contains(e.target)) {\n        setColDropdownOpen(false);\n      }\n    }\n    if (colDropdownOpen) {\n      document.addEventListener('mousedown', handleClick);\n    } else {\n      document.removeEventListener('mousedown', handleClick);\n    }\n    return () => document.removeEventListener('mousedown', handleClick);\n  }, [colDropdownOpen]);\n\n  const handleIssueChange = (idx, field, value) => {\n    setEditIssues(issues => issues.map((issue, i) => i === idx ? { ...issue, [field]: value } : issue));\n  };\n\n  const handleExtraChange = async (idx, field, value) => {\n    setExtraFields(fields => fields.map((f, i) => i === idx ? { ...f, [field]: value } : f));\n    if (['Create Bug', 'Create Sub Task'].includes(value)) {\n      setPendingAction(value);\n      setPendingIdx(idx);\n      setModalOpen(true);\n      return;\n    }\n    if (field === 'action' && ['Create Test Case', 'Create Bug', 'Create Sub Task'].includes(value)) {\n      setProcessingRows(rows => ({ ...rows, [idx]: true }));\n      setRowError(errs => ({ ...errs, [idx]: undefined }));\n      try {\n        const issueKey = editIssues[idx]?.id;\n        const res = await fetch('/api/ai/create-issue', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ issueKey, action: value })\n        });\n        if (!res.ok) throw new Error((await res.json()).error || 'Failed to create issue');\n        const data = await res.json();\n        setExtraFields(fields => fields.map((f, i) =>\n          i === idx\n            ? {\n                ...f,\n                jiraId: data.jiraId,\n                jiraIdList: f.jiraIdList ? [...f.jiraIdList, data.jiraId] : [data.jiraId]\n              }\n            : f\n        ));\n        setProcessingRows(rows => {\n          const updated = { ...rows };\n          delete updated[idx];\n          return updated;\n        });\n      } catch (err) {\n        setRowError(errs => ({ ...errs, [idx]: 'Failed to create issue. Retry?' }));\n        setProcessingRows(rows => {\n          const updated = { ...rows };\n          delete updated[idx];\n          return updated;\n        });\n      }\n    }\n  };\n\n  const handleModalSubmit = async () => {\n    if (pendingAction && pendingIdx !== null) {\n      setModalOpen(false);\n      setProcessingRows(rows => ({ ...rows, [pendingIdx]: true }));\n      setRowError(errs => ({ ...errs, [pendingIdx]: undefined }));\n      try {\n        const issueKey = editIssues[pendingIdx]?.id;\n        const res = await fetch('/api/ai/create-issue', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ issueKey, action: pendingAction, userInput: modalInput })\n        });\n        if (!res.ok) throw new Error((await res.json()).error || 'Failed to create issue');\n        const data = await res.json();\n        setExtraFields(fields => fields.map((f, i) =>\n          i === pendingIdx\n            ? {\n                ...f,\n                jiraId: data.jiraId,\n                jiraIdList: f.jiraIdList ? [...f.jiraIdList, data.jiraId] : [data.jiraId]\n              }\n            : f\n        ));\n      } catch (err) {\n        setRowError(errs => ({ ...errs, [pendingIdx]: 'Failed to create issue. Retry?' }));\n      } finally {\n        setProcessingRows(rows => {\n          const updated = { ...rows };\n          delete updated[pendingIdx];\n          return updated;\n        });\n        setModalInput('');\n        setPendingAction(null);\n        setPendingIdx(null);\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    setSaveMsg('');\n    try {\n      for (let i = 0; i < editIssues.length; i++) {\n        const issue = editIssues[i];\n        await fetch('/api/jira/issues/' + issue.id, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            status: issue.status,\n            assignee: issue.assignee\n          }),\n        });\n      }\n      setSaveMsg('Jira issues updated!');\n      setTimeout(() => setSaveMsg(''), 2000);\n    } catch (err) {\n      setSaveMsg('Failed to update Jira issues');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleExecuteTestChange = async (idx, value) => {\n    setExtraFields(fields => fields.map((f, i) => {\n      const type = (editIssues[i]?.type || '').toLowerCase();\n      if (i === idx && type === 'test') {\n        return { ...f, executeTest: value, jiraId: editIssues[i]?.id, jiraIdList: [editIssues[i]?.id] };\n      }\n      return i === idx ? { ...f, executeTest: value } : f;\n    }));\n    if (value === 'Yes') {\n      const type = (editIssues[idx]?.type || '').toLowerCase();\n      const jiraId =\n        type === 'test'\n          ? editIssues[idx]?.id\n          : extraFields[idx]?.jiraIdList?.[0] || 'NO_ID';\n      const testCaseName = encodeURIComponent(editIssues[idx]?.summary || '');\n      navigate(`/live-test/${jiraId}?fromMySprint=1&name=${testCaseName}&manual=1`);\n    }\n  };\n\n  // Add handler for project change\n  const handleProjectChange = async (e) => {\n    const projectId = e.target.value;\n    setSelectedProject(projectId);\n    if (projectId) {\n      const res = await fetch('/api/jira/project', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ projectId }),\n      });\n      const data = await res.json();\n      if (data.success) {\n        // Fetch the latest projectId from settings to ensure sync\n        settingsService.getApplicationSettings().then(appSettings => {\n          const latestProjectId = appSettings?.jira?.projectId || projectId;\n          fetchSprintForProject(latestProjectId);\n        });\n      }\n    }\n  };\n\n  // Helper to fetch sprint for a given projectId\n  const fetchSprintForProject = async (projectId) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [sprintRes, actionsRes] = await Promise.all([\n        fetch(`/api/jira/projects/${projectId}/sprint/current`),\n        fetch('/api/mysprint-actions')\n      ]);\n      if (!sprintRes.ok) throw new Error('Failed to fetch sprint');\n      const sprintData = await sprintRes.json();\n      const actionsData = actionsRes.ok ? await actionsRes.json() : [];\n      setMySprintActions(actionsData);\n      const mergedExtraFields = (sprintData.issues || []).map(issue => {\n        const found = actionsData.filter(a => a.parentKey === issue.id);\n        const jiraIds = found.map(a => a.jiraId).filter(Boolean);\n        return {\n          action: '',\n          jiraId: jiraIds.join(','),\n          jiraIdList: jiraIds,\n          executeTest: '',\n          automationTest: '',\n          automationProject: ''\n        };\n      });\n      setSprint(sprintData);\n      setEditIssues(sprintData.issues || []);\n      setExtraFields(mergedExtraFields);\n      setProcessingRows({});\n      setRowError({});\n    } catch (err) {\n      setError(err.message || 'Failed to load sprint');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to retry fetching settings and sprint\n  const retryFetchSettings = () => {\n    setError(null);\n    setLoading(true);\n    fetchJiraProjects();\n    settingsService.getApplicationSettings()\n      .then(appSettings => {\n        setSelectedProject(appSettings?.jira?.projectId || '');\n        if (appSettings?.jira?.projectId) {\n          fetchSprintForProject(appSettings.jira.projectId);\n        }\n      })\n      .catch(err => {\n        setError('Please check your project integration and try again.');\n      })\n      .finally(() => setLoading(false));\n  };\n\n  // Add new function fetchJiraProjects\n  const fetchJiraProjects = () => {\n    fetch('/api/jira/projects')\n      .then(res => {\n        if (!res.ok) throw new Error('Network response was not ok: ' + res.status);\n        return res.json();\n      })\n      .then(data => setProjects(data))\n      .catch(err => {\n        setProjects([]);\n      });\n  };\n\n  console.log('Projects state before render:', projects);\n\n  return (\n    <div className=\"min-h-screen bg-white text-gray-900 dark:bg-neutral-900 dark:text-gray-100 flex flex-col p-8\">\n      <div className=\"w-full px-8 pt-2\">\n        <h2 className=\"text-3xl font-bold mb-8\">My Sprint</h2>\n        {/* Jira Project Selector Dropdown - moved below the page title */}\n        {console.log('Dropdown projects:', projects)}\n        <div style={{ marginBottom: 16 }}>\n          <label htmlFor=\"jira-project-select\" style={{ marginRight: 8 }}>Jira Project:</label>\n          <select\n            id=\"jira-project-select\"\n            value={selectedProject}\n            onChange={handleProjectChange}\n            className=\"rounded px-3 py-2 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            style={{ minWidth: 220 }}\n          >\n            <option value=\"\">Select Jira Project</option>\n            {projects.map(p => (\n              <option key={p.key} value={p.key}>{p.name} ({p.key})</option>\n            ))}\n          </select>\n        </div>\n        {loading ? (\n          <div className=\"text-gray-400 dark:text-gray-300\">Loading current sprint...</div>\n        ) : error ? (\n          <div className=\"text-white text-lg flex flex-col items-start gap-4\">\n            <div>\n              <span className=\"font-bold text-2xl\">{error}</span>\n            </div>\n            <button\n              onClick={retryFetchSettings}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded shadow hover:bg-blue-700\"\n            >\n              Retry\n            </button>\n          </div>\n        ) : sprint ? (\n          <>\n            <div className=\"mb-2 p-4 rounded-lg bg-neutral-100 dark:bg-neutral-800 border border-neutral-200 dark:border-neutral-700 shadow-sm w-full\">\n              <div className=\"flex items-center gap-4 mb-2\">\n                <span className=\"text-xl font-bold text-blue-600 dark:text-blue-300\">{sprint.name}</span>\n                <span className={`px-3 py-1 rounded-full text-xs font-semibold ml-2 ${sprint.state === 'active' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : 'bg-gray-200 text-gray-800 dark:bg-neutral-700 dark:text-gray-200'}`}>{sprint.state}</span>\n              </div>\n              <div className=\"flex flex-wrap items-center gap-6 text-gray-700 dark:text-gray-200 mb-1\">\n                <span>Start: <b>{sprint.startDate ? new Date(sprint.startDate).toLocaleDateString() : '-'}</b></span>\n                <span>End: <b>{sprint.endDate ? new Date(sprint.endDate).toLocaleDateString() : '-'}</b></span>\n              </div>\n              <div className=\"text-gray-500 dark:text-gray-400 text-sm mt-2\">Goal: {sprint.goal || 'No goal set for this sprint.'}</div>\n            </div>\n          </>\n        ) : (\n          <div className=\"text-gray-400 dark:text-gray-300\">No active sprint found for your project.</div>\n        )}\n      </div>\n      {/* Table is now outside the centered container for full width */}\n      {sprint && !error && (\n        <div className=\"w-screen ml-8 mr-8 pr-12 overflow-x-auto mt-12 mb-16\">\n          {/* Column visibility dropdown */}\n          <div className=\"relative mb-4\">\n            <button\n              className=\"px-4 py-2 bg-gray-200 dark:bg-neutral-800 rounded shadow text-gray-900 dark:text-gray-100 font-semibold hover:bg-gray-300 dark:hover:bg-neutral-700\"\n              onClick={() => setColDropdownOpen(v => !v)}\n            >\n              Columns\n            </button>\n            {colDropdownOpen && (\n              <div ref={colDropdownRef} className=\"absolute left-0 mt-2 bg-white dark:bg-neutral-900 border border-gray-300 dark:border-neutral-700 rounded shadow-lg z-50 p-4 min-w-[200px]\">\n                {ALL_COLUMNS.map(col => (\n                  <label key={col.key} className=\"flex items-center gap-2 py-1 cursor-pointer\">\n                    <input\n                      type=\"checkbox\"\n                      checked={visibleColumns.includes(col.key)}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          setVisibleColumns(cols => [...cols, col.key]);\n                        } else {\n                          setVisibleColumns(cols => cols.filter(k => k !== col.key));\n                        }\n                      }}\n                    />\n                    <span>{col.label}</span>\n                  </label>\n                ))}\n              </div>\n            )}\n          </div>\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-neutral-700\">\n            <thead className=\"bg-gray-50 dark:bg-neutral-900\">\n              <tr>\n                {ALL_COLUMNS.filter(col => visibleColumns.includes(col.key)).map(col => (\n                  <th\n                    key={col.key}\n                    className={`px-4 py-2 text-left font-semibold ${['id','summary','type','status','assignee'].includes(col.key) ? 'bg-[#1A1E1D] text-white' : ''}`}\n                  >\n                    {col.label}\n                  </th>\n                ))}\n                <th className=\"w-11\"></th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-neutral-900 divide-y divide-gray-200 dark:divide-neutral-700\">\n              {paginatedRows.map((issue, idx) => {\n                // Determine allowed actions based on issue type\n                let allowedActions = [];\n                let actionDisabled = false;\n                let executeTestDisabled = false;\n                let jiraIdEditable = false;\n                const type = (issue.type || '').toLowerCase();\n                if (type === 'user story' || type === 'story') {\n                  allowedActions = ACTION_OPTIONS;\n                } else if (type === 'bug') {\n                  allowedActions = ['Create Sub Task'];\n                } else if (type === 'task') {\n                  allowedActions = ['Create Bug', 'Create Sub Task'];\n                } else if (type === 'test') {\n                  allowedActions = [];\n                  actionDisabled = true;\n                  jiraIdEditable = true;\n                } else {\n                  allowedActions = [];\n                  actionDisabled = true;\n                }\n                // For Test type, allow Execute Test, for others keep as is\n                if (type === 'test') {\n                  executeTestDisabled = false;\n                }\n                return (\n                  <tr key={issue.id} className=\"hover:bg-gray-50 dark:hover:bg-neutral-700 transition-colors\">\n                    {ALL_COLUMNS.filter(col => visibleColumns.includes(col.key)).map(col => {\n                      switch (col.key) {\n                        case 'id':\n                          return <td key=\"id\" className=\"px-4 py-2 font-mono bg-[#1A1E1D] text-white\">{issue.id}</td>;\n                        case 'summary':\n                          return <td key=\"summary\" className=\"px-4 py-2 whitespace-normal break-words max-w-xs bg-[#1A1E1D] text-white\">{issue.summary}</td>;\n                        case 'type':\n                          return <td key=\"type\" className=\"px-4 py-2 bg-[#1A1E1D] text-white\">{issue.type}</td>;\n                        case 'status':\n                          return <td key=\"status\" className=\"px-4 py-2 bg-[#1A1E1D] text-white\">\n                            <select\n                              className=\"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-[#1A1E1D] text-white dark:bg-neutral-900 dark:text-gray-100\"\n                              value={issue.status}\n                              onChange={e => handleIssueChange(idx, 'status', e.target.value)}\n                            >\n                              {STATUS_OPTIONS.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n                            </select>\n                          </td>;\n                        case 'assignee':\n                          return <td key=\"assignee\" className=\"px-4 py-2 bg-[#1A1E1D] text-white\">\n                            <input\n                              className=\"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-[#1A1E1D] text-white dark:bg-neutral-900 dark:text-gray-100\"\n                              value={issue.assignee}\n                              onChange={e => handleIssueChange(idx, 'assignee', e.target.value)}\n                            />\n                          </td>;\n                        case 'action':\n                          return <td key=\"action\" className=\"px-4 py-2\">\n                            <select\n                              className=\"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100\"\n                              value={extraFields[idx]?.action || ''}\n                              onChange={e => handleExtraChange(idx, 'action', e.target.value)}\n                              disabled={actionDisabled || allowedActions.length === 0}\n                            >\n                              <option value=\"\">Select</option>\n                              {allowedActions.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n                            </select>\n                          </td>;\n                        case 'jiraId':\n                          return <td key=\"jiraId\" className=\"px-4 py-2 whitespace-normal break-words max-w-xs\">\n                            <div className=\"flex flex-wrap items-center gap-2\">\n                              {extraFields[idx]?.jiraIdList && extraFields[idx].jiraIdList.length > 0 ? (\n                                extraFields[idx].jiraIdList.map((id, i) => (\n                                  <React.Fragment key={id}>\n                                    <a\n                                      href={`https://your-domain.atlassian.net/browse/${id}`}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                      className=\"text-blue-600 underline dark:text-blue-300\"\n                                    >\n                                      {id}\n                                    </a>\n                                    {(i < extraFields[idx].jiraIdList.length - 1) && ((i + 1) % 3 === 0 ? <br /> : ', ')}\n                                  </React.Fragment>\n                                ))\n                              ) : (\n                                <input\n                                  className={`rounded px-2 py-1 border bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100 ${processingRows[idx] ? 'border-blue-400 bg-blue-50 dark:bg-blue-950 animate-pulse' : 'border-gray-300 dark:border-neutral-700'} ${rowError[idx] ? 'border-red-500 bg-red-50 dark:bg-red-900' : ''}`}\n                                  value={extraFields[idx]?.jiraId || ''}\n                                  onChange={e => handleExtraChange(idx, 'jiraId', e.target.value)}\n                                  disabled={processingRows[idx] || (!jiraIdEditable && !processingRows[idx])}\n                                />\n                              )}\n                              {processingRows[idx] && (\n                                <span className=\"w-4 h-4 border-2 border-blue-400 border-t-transparent rounded-full animate-spin\"></span>\n                              )}\n                              {rowError[idx] && (\n                                <button\n                                  className=\"text-xs text-red-500 underline ml-2\"\n                                  onClick={() => handleExtraChange(idx, 'action', 'Create Test Case')}\n                                >Retry</button>\n                              )}\n                            </div>\n                          </td>;\n                        case 'executeTest':\n                          return <td key=\"executeTest\" className=\"px-4 py-2\">\n                            <select\n                              className=\"rounded px-2 py-1 border border-gray-300 dark:border-neutral-700 bg-white dark:bg-neutral-900 text-gray-900 dark:text-gray-100\"\n                              value={extraFields[idx]?.executeTest || ''}\n                              onChange={e => handleExecuteTestChange(idx, e.target.value)}\n                              disabled={type !== 'test' && false}\n                            >\n                              <option value=\"\">Select</option>\n                              {EXECUTE_OPTIONS.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n                            </select>\n                          </td>;\n                        default:\n                          return null;\n                      }\n                    })}\n                    <td className=\"w-11\"></td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          <div className=\"flex gap-4 mt-8 items-center ml-8\">\n            <button\n              className=\"px-6 py-2 rounded bg-blue-500 text-white font-semibold hover:bg-blue-600 disabled:opacity-60 shadow\"\n              onClick={handleSave}\n              disabled={saving}\n            >{saving ? 'Saving...' : 'Save Sprint'}</button>\n            {saveMsg && <span className=\"text-sm text-green-400 dark:text-green-300\">{saveMsg}</span>}\n          </div>\n          {redirectMsg && <div className=\"text-blue-500 font-semibold my-4 ml-8\">{redirectMsg}</div>}\n          {/* Pagination Controls */}\n          <div className=\"flex justify-center items-center gap-2 mt-4\">\n            <button\n              className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\"\n              onClick={() => setCurrentPage(1)}\n              disabled={currentPage === 1}\n              aria-label=\"First Page\"\n            >\n              &#171;\n            </button>\n            <button\n              className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\"\n              onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n              disabled={currentPage === 1}\n              aria-label=\"Previous Page\"\n            >\n              &#8249;\n            </button>\n            {Array.from({ length: totalPages }, (_, i) => (\n              <button\n                key={i + 1}\n                className={`px-3 py-1 rounded ${currentPage === i + 1\n                  ? 'bg-blue-500 text-white dark:bg-blue-600 dark:text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600'}`}\n                onClick={() => setCurrentPage(i + 1)}\n              >\n                {i + 1}\n              </button>\n            ))}\n            <button\n              className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\"\n              onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n              disabled={currentPage === totalPages}\n              aria-label=\"Next Page\"\n            >\n              &#8250;\n            </button>\n            <button\n              className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-neutral-700 dark:text-gray-200 dark:hover:bg-neutral-600 disabled:opacity-50\"\n              onClick={() => setCurrentPage(totalPages)}\n              disabled={currentPage === totalPages}\n              aria-label=\"Last Page\"\n            >\n              &#187;\n            </button>\n          </div>\n        </div>\n      )}\n      {/* Modal for Bug/Sub Task details */}\n      <Modal open={modalOpen} onClose={() => setModalOpen(false)} title={pendingAction} width=\"max-w-xl\">\n        <textarea\n          className=\"w-full border rounded p-2 mb-4 bg-white dark:bg-neutral-800 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-neutral-700 placeholder-gray-400 dark:placeholder-gray-400\"\n          rows={6}\n          placeholder={`Enter details for ${pendingAction}...`}\n          value={modalInput}\n          onChange={e => setModalInput(e.target.value)}\n        />\n        {modalInput.trim().length < 100 && (\n          <div className=\"text-red-500 text-sm mb-2\">Please enter at least 100 characters</div>\n        )}\n        <div className=\"flex gap-4 justify-end mt-2\">\n          <button className=\"px-4 py-2 rounded bg-gray-300 text-gray-800 dark:bg-neutral-700 dark:text-gray-100\" onClick={() => setModalOpen(false)}>Cancel</button>\n          <button className=\"px-4 py-2 rounded bg-blue-600 text-white\" onClick={handleModalSubmit} disabled={modalInput.trim().length < 100}>Submit</button>\n        </div>\n      </Modal>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}