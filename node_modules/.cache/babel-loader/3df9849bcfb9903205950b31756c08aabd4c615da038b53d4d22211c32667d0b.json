{"ast":null,"code":"var _jsxFileName = \"/Users/pournima/Documents/Zap Portotype/15 june/Zap-Propotype/src/App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './pages/Dashboard';\nimport ActivityLogs from './pages/ActivityLogs';\nimport Settings from './pages/Settings';\nimport ZapAIFeatures from './pages/ProjectManagement';\nimport { chatService } from './services/api';\nimport { logActivity, updateActivityLog, createActivityObject, ActivityTypes } from './utils/activityLogger';\nimport ChatBox from './components/ChatBox';\nimport axios from 'axios';\nimport api from './services/api';\nimport TopNavBar from './components/TopNavBar';\nimport JiraSettings from './pages/JiraSettings';\nimport AIChatbotAssistan from './pages/AIChatbotAssistan';\nimport TestDark from './pages/TestDark';\nimport MySprint from './pages/MySprint';\nimport LiveTest from './pages/LiveTest';\nimport AutomatedTest from './pages/AutomationTest';\nimport Login from './pages/Login';\nimport Contactus from './pages/Contactus';\nimport MLanalytics from './pages/MLanalytics';\n// ...existing code...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  children\n}) {\n  const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n  return isLoggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 34\n  }, this);\n}\n_c = PrivateRoute;\nfunction AppRoutes(props) {\n  _s();\n  const location = useLocation();\n  const {\n    chatOpen,\n    setChatOpen,\n    messages,\n    setMessages,\n    input,\n    setInput,\n    loading,\n    setLoading,\n    audioRef,\n    messagesEndRef,\n    uploadedFile,\n    setUploadedFile,\n    actionLoading,\n    setActionLoading,\n    followupActions,\n    setFollowupActions,\n    followupError,\n    setFollowupError,\n    followupMessageIdx,\n    setFollowupMessageIdx,\n    buttonClickedIdx,\n    setButtonClickedIdx,\n    sendMessage,\n    handleFileUpload,\n    handleGenerate,\n    handleFollowupAction,\n    welcomeMessage,\n    activityLogsRefreshKey,\n    chatProps,\n    themeMode,\n    setThemeMode,\n    sidebarCollapsed,\n    setSidebarCollapsed\n  } = props;\n\n  // If on /login, render only the Login component\n  if (location.pathname === '/login') {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect root path '/' to '/login' using React Router\n  if (location.pathname === '/') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, render the full layout\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white text-gray-900 dark:bg-neutral-900 dark:text-gray-100 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(TopNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 mt-14\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        collapsed: sidebarCollapsed,\n        setCollapsed: setSidebarCollapsed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: `flex-1 overflow-auto transition-all duration-300 ${sidebarCollapsed ? 'ml-16' : 'ml-60'}`,\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              children: /*#__PURE__*/_jsxDEV(Dashboard, {\n                ...chatProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/activity\",\n            element: /*#__PURE__*/_jsxDEV(ActivityLogs, {\n              refreshKey: activityLogsRefreshKey,\n              ...chatProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings\",\n            element: /*#__PURE__*/_jsxDEV(Settings, {\n              themeMode: themeMode,\n              setThemeMode: setThemeMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/settings/jira\",\n            element: /*#__PURE__*/_jsxDEV(JiraSettings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/zap-ai-features\",\n            element: /*#__PURE__*/_jsxDEV(ZapAIFeatures, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/live-test/:jiraId\",\n            element: /*#__PURE__*/_jsxDEV(LiveTest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/live-test\",\n            element: /*#__PURE__*/_jsxDEV(LiveTest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ai-chatbot-assistan\",\n            element: /*#__PURE__*/_jsxDEV(AIChatbotAssistan, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/test-dark\",\n            element: /*#__PURE__*/_jsxDEV(TestDark, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/my-sprint\",\n            element: /*#__PURE__*/_jsxDEV(MySprint, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/automatedtest\",\n            element: /*#__PURE__*/_jsxDEV(AutomatedTest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/AutomationTest\",\n            element: /*#__PURE__*/_jsxDEV(AutomatedTest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contactus\",\n            element: /*#__PURE__*/_jsxDEV(Contactus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), location.pathname !== '/ai-chatbot-assistan' && !chatOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fixed bottom-8 right-8 z-50 bg-blue-500 text-white rounded-full shadow-lg w-16 h-16 flex items-center justify-center text-3xl hover:bg-blue-600 transition\",\n          onClick: () => setChatOpen(true),\n          title: \"Open Chat\",\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), location.pathname !== '/ai-chatbot-assistan' && /*#__PURE__*/_jsxDEV(ChatBox, {\n          ...chatProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AppRoutes, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c2 = AppRoutes;\nfunction App() {\n  _s2();\n  // Global chat state\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 0,\n    sender: 'ai',\n    message: `👋 Welcome to Zap⚡️ - Your AI Assistant!\\n\\nI can help you with:\\n\\n📝 Test Case Generation:\\n- Generate test cases from user stories\\n- link test cases to user stories\\n- automate test cases\\n\\n🤖 Automation Scripts:\\n- Create automation scripts from test cases or user stories\\n- upload script to project\\n\\n🐞 Bugs Creation:\\n- Create bug from user story\\n- link bug to user story\\n\\n🎑 Image analysis for UI element:\\n- UI element detection\\n- create test case for UI element\\n- create automation script for UI element\\n\\n🔍 How to get started:\\n1. Use 'id ISSUE-ID' to work with a specific issue\\n2. Type 'settings' to configure the application\\n\\nWhat would you like to do today? 🚀`\n  }, {\n    id: 1,\n    sender: 'ai',\n    message: 'Hello! How can I help you today?'\n  }, {\n    id: 2,\n    sender: 'user',\n    message: 'I need help with my test automation.'\n  }, {\n    id: 3,\n    sender: 'ai',\n    message: 'Sure, I can help you with that. What specific issue are you facing?'\n  }, {\n    id: 4,\n    sender: 'user',\n    message: 'id SCRUM-1'\n  }, {\n    id: 5,\n    sender: 'ai',\n    message: 'User Story: Logout from the App\\nSummary: As a user I want to logout from the App\\nDescription: logout from the app\\nnavigate to setting and click on logout button\\nAcceptance Criteria:\\n.1. The logout button should be visible in the sidebar.\\n.2. The logout button should be clickable.\\n.3. The logout button should logout the user from the app.\\n 👉🏻 To generate a test case for this user story, reply with: Test Case\\n 🐞 To report a bug for this user story, reply with: Bug'\n  }, {\n    id: 6,\n    sender: 'user',\n    message: 'bug'\n  }, {\n    id: 7,\n    sender: 'ai',\n    message: 'Great, you found a bug! To proceed with bug creation, can you provide as much detail as possible about the bug, please?\\nTo cancel the process, reply with: cancel'\n  }, {\n    id: 8,\n    sender: 'user',\n    message: 'Logout Button on Sidebar Not Clickable'\n  }, {\n    id: 9,\n    sender: 'ai',\n    message: 'Bug: Logout Button on Sidebar Not Clickable\\nSummary:\\nAs a user, I want to log out of the app using the logout button in the sidebar, but the button is currently not clickable.\\n\\nDescription:\\nThe logout button is visible in the sidebar, but clicking on it does not trigger any action. This prevents users from logging out through the expected interface.\\n\\nSteps to Reproduce:\\n1. Log in to the application.\\n2. Locate the logout button in the sidebar.\\n3. Attempt to click the button.\\n4. Observe that no logout action is performed.\\n\\nExpected Behavior:\\n1. The logout button should be clearly visible.\\n2. The button should be clickable.\\n3. Clicking the button should log the user out, clear the session, and redirect to the login screen.\\n\\nActual Behavior:\\n1. The logout button is visible but not responsive to user interaction.\\n2. No logout or redirection occurs when clicked.\\n\\nSeverity: Major\\nPriority: High\\n\\nEnvironment: [Specify environment, e.g., QA, Staging | Browser: Chrome 123 | OS: Windows 11]\\n\\n 🖼️ Would you like to attach a screenshot to this bug? (reply with: yes or no)'\n  }, {\n    id: 10,\n    sender: 'user',\n    message: 'yes'\n  }, {\n    id: 11,\n    sender: 'ai',\n    message: '📎 Please upload your screenshot(s) for the bug (max 3). Use the upload image 🏞️ button. When done, reply with: done or yes to create the bug.'\n  }, {\n    id: 12,\n    sender: 'user',\n    message: '❌  Image upload failed'\n  }, {\n    id: 13,\n    sender: 'ai',\n    message: 'Would you like to try again(Yes), or proceed without uploading an image(No)?.'\n  }, {\n    id: 14,\n    sender: 'user',\n    message: 'No'\n  }, {\n    id: 15,\n    sender: 'ai',\n    message: '✅ Bug created successfully with ID: SCRUM-11\\n🔗 The bug has been linked to the user story SCRUM-1'\n  }, {\n    id: 16,\n    sender: 'ai',\n    message: 'You just created a bug. 🚀 If you want to add more details, please specify, or use a command like \\'create test case\\', \\'create bug\\', \\'create User story\\', \\'create automation script\\', or provide a Jira ID. and follow the instructions.'\n  }]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false);\n  const [followupActions, setFollowupActions] = useState(null);\n  const [followupError, setFollowupError] = useState(null);\n  const [followupMessageIdx, setFollowupMessageIdx] = useState(null);\n  const [buttonClickedIdx, setButtonClickedIdx] = useState(null);\n  const [activityLogsRefreshKey, setActivityLogsRefreshKey] = useState(0);\n  const [themeMode, setThemeMode] = useState('light');\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  useEffect(() => {\n    if (themeMode === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    console.log('Current <html> class:', document.documentElement.className);\n  }, [themeMode]);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/chat/history').then(res => res.json()).then(data => setMessages(data)).catch(err => console.error('Error fetching chat history:', err));\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Play sound when a new AI message arrives\n  useEffect(() => {\n    if (chatOpen && messages.length > 0 && messages[messages.length - 1].sender === 'ai') {\n      audioRef.current && audioRef.current.play().catch(e => {});\n    }\n  }, [messages, chatOpen]);\n\n  // Chat logic handlers\n  const sendMessage = async (e, overrideInput) => {\n    e.preventDefault();\n    const messageToSend = overrideInput !== undefined ? overrideInput : input;\n    if (!messageToSend.trim()) return;\n    setMessages([...messages, {\n      sender: 'user',\n      message: messageToSend\n    }]);\n    setInput('');\n    setLoading(true);\n    try {\n      const res = await chatService.sendMessage(messageToSend);\n      const aiMsg = res.data.message;\n      if (aiMsg && aiMsg.trim()) {\n        setMessages(prev => [...prev, {\n          sender: 'ai',\n          message: aiMsg\n        }]);\n      }\n\n      // --- LOGGING LOGIC: Log based on AI response ---\n      if (res.data.message) {\n        const aiMsg = res.data.message.toLowerCase();\n        if (aiMsg.includes('generated test case')) {\n          const activity = createActivityObject('Test Case', 'AI generated a test case', ActivityTypes.TEST_CASE, 'new');\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        } else if (aiMsg.includes('bug has been created') || aiMsg.includes('bug created')) {\n          const activity = createActivityObject('Bug', 'AI created a bug', ActivityTypes.BUG, 'new');\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        } else if (aiMsg.includes('automation script') && aiMsg.includes('successfully')) {\n          const activity = createActivityObject('Automation Script', 'AI generated an automation script', ActivityTypes.AUTOMATION_SCRIPT, 'new');\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        }\n      }\n      // --- END LOGGING LOGIC ---\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: 'ai',\n        message: 'Error from AI.'\n      }]);\n    }\n    setLoading(false);\n  };\n  const handleFileUpload = async e => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    const file = files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await api.post('/api/chat/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        url,\n        name,\n        type\n      } = res.data;\n      const fileUrl = url && url.startsWith('/uploads/') ? `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${url}` : url;\n      setUploadedFile({\n        name,\n        type,\n        url: fileUrl\n      });\n      const activity = createActivityObject('File Upload', `Uploaded ${name} (${type})`, type === 'application/pdf' ? ActivityTypes.PDF_DOCUMENT : ActivityTypes.USER_STORY, 'new');\n      await logActivity(activity);\n      setActivityLogsRefreshKey(k => k + 1);\n      if (type && type.startsWith('image/')) {\n        setMessages(prev => [...prev, {\n          sender: 'user',\n          message: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fileUrl,\n            alt: name,\n            style: {\n              maxWidth: 200,\n              borderRadius: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 38\n          }, this)\n        }, {\n          type: 'fileActions',\n          file: {\n            name,\n            type,\n            url: fileUrl\n          }\n        }]);\n      } else if (type === 'application/pdf') {\n        setMessages(prev => [...prev, {\n          sender: 'user',\n          message: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: fileUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              fill: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.828A2 2 0 0 0 19.414 7.414l-4.828-4.828A2 2 0 0 0 12.172 2H6zm6 1.414L18.586 10H14a2 2 0 0 1-2-2V3.414zM6 4h5v4a4 4 0 0 0 4 4h4v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 83\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, {\n          type: 'fileActions',\n          file: {\n            name,\n            type,\n            url: fileUrl\n          }\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: 'user',\n          message: `Unsupported file type: ${name}`\n        }, {\n          sender: 'ai',\n          message: 'File uploaded, but no analysis available for this type.'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setMessages(prev => [...prev, {\n        sender: 'ai',\n        message: 'Failed to upload file. Please try again.'\n      }]);\n    }\n  };\n  const handleGenerate = async (type, fileName) => {\n    setActionLoading(true);\n    setFollowupError(null);\n    let logId = null;\n    try {\n      let response;\n      let activityType;\n      let title;\n      let description;\n      switch (type) {\n        case 'userStory':\n          activityType = ActivityTypes.USER_STORY;\n          title = 'User Story';\n          description = `Generating user story from ${fileName}`;\n          break;\n        case 'testCase':\n          activityType = ActivityTypes.TEST_CASE;\n          title = 'Test Case';\n          description = `Generating test case from ${fileName}`;\n          break;\n        default:\n          throw new Error('Invalid generation type');\n      }\n      const activity = createActivityObject(title, description, activityType, 'in progress');\n      const log = await logActivity(activity);\n      logId = log.id;\n      setActivityLogsRefreshKey(k => k + 1);\n      switch (type) {\n        case 'userStory':\n          response = await chatService.generateUserStory(fileName);\n          break;\n        case 'testCase':\n          response = await chatService.generateTestCase(fileName);\n          break;\n      }\n      await updateActivityLog(logId, {\n        status: 'done',\n        description: description.replace('Generating', 'Generated')\n      });\n      const aiMsg = response.data.message;\n      if (aiMsg && aiMsg.trim()) {\n        setMessages(prev => [...prev, {\n          sender: 'ai',\n          message: aiMsg\n        }]);\n      }\n      setFollowupActions(response.data.actions);\n      setFollowupMessageIdx(messages.length);\n    } catch (error) {\n      if (logId) {\n        await updateActivityLog(logId, {\n          status: 'failed'\n        });\n      }\n      console.error('Error generating:', error);\n      setFollowupError('Failed to generate. Please try again.');\n    } finally {\n      setActionLoading(false);\n    }\n  };\n  const handleFollowupAction = async (action, content) => {\n    setActionLoading(true);\n    setFollowupError(null);\n    try {\n      let response;\n      let activityType;\n      let title;\n      let description;\n      switch (action) {\n        case 'linkToJira':\n          response = await chatService.linkToJira(content);\n          activityType = ActivityTypes.TEST_CASE;\n          title = 'Jira Integration';\n          description = 'Linked content to Jira';\n          break;\n        case 'downloadAsPDF':\n          response = await chatService.downloadAsPDF(content);\n          activityType = ActivityTypes.PDF_DOCUMENT;\n          title = 'PDF Download';\n          description = 'Downloaded content as PDF';\n          break;\n        case 'generateAutomation':\n          response = await chatService.generateAutomationScript(content);\n          activityType = ActivityTypes.AUTOMATION_SCRIPT;\n          title = 'Automation Script';\n          description = 'Generated automation script';\n          break;\n        default:\n          throw new Error('Invalid action type');\n      }\n      const activity = createActivityObject(title, description, activityType, 'in progress');\n      await logActivity(activity);\n      setActivityLogsRefreshKey(k => k + 1);\n      if (action === 'downloadAsPDF') {\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'generated-content.pdf';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        const aiMsg = response.data.message;\n        if (aiMsg && aiMsg.trim()) {\n          setMessages(prev => [...prev, {\n            sender: 'ai',\n            message: aiMsg\n          }]);\n        }\n      }\n      setFollowupActions(null);\n      setFollowupMessageIdx(null);\n    } catch (error) {\n      console.error('Error performing follow-up action:', error);\n      setFollowupError('Failed to perform action. Please try again.');\n    } finally {\n      setActionLoading(false);\n    }\n  };\n  const welcomeMessage = `👋 Welcome to Zap⚡️ - Your AI Testing Assistant!\\n\\nI can help you with:\\n\\n📝 Test Case Generation:\\n   - Generate test cases from user stories\\n   - link test cases to user stories\\n   - automate test cases\\n\\n🤖 Automation Scripts:\\n   - Create automation scripts from test cases or user stories\\n   - upload script to project\\n\\n🐞 Bugs Creation:\\n   - Create bug from user story\\n   - link bug to user story\\n\\n🎑 Image analysis for UI element:\\n   - UI element detection\\n   - create test case for UI element\\n   - create automation script for UI element\\n\\n🔍 How to get started:\\n1. Use 'id ISSUE-ID' to work with a specific issue\\n2. Type 'settings' to configure the application\\n\\nWhat would you like to do today? 🚀`;\n  const theme = createTheme({\n    palette: {\n      mode: themeMode,\n      primary: {\n        main: '#0ea5e9'\n      },\n      secondary: {\n        main: '#64748b'\n      },\n      background: {\n        default: themeMode === 'dark' ? '#181A1B' : '#fff',\n        paper: themeMode === 'dark' ? '#23272f' : '#fff'\n      },\n      text: {\n        primary: themeMode === 'dark' ? '#F4F5F7' : '#1A1E1D',\n        secondary: themeMode === 'dark' ? '#B3B8C2' : '#4B5563'\n      },\n      divider: themeMode === 'dark' ? '#23272f' : '#E5E7EB'\n    }\n  });\n\n  // Props to pass to chat-enabled pages and ChatBox\n  const chatProps = {\n    chatOpen,\n    setChatOpen,\n    messages,\n    setMessages,\n    input,\n    setInput,\n    loading,\n    setLoading,\n    audioRef,\n    messagesEndRef,\n    uploadedFile,\n    setUploadedFile,\n    actionLoading,\n    setActionLoading,\n    followupActions,\n    setFollowupActions,\n    followupError,\n    setFollowupError,\n    followupMessageIdx,\n    setFollowupMessageIdx,\n    buttonClickedIdx,\n    setButtonClickedIdx,\n    sendMessage,\n    handleFileUpload,\n    handleGenerate,\n    handleFollowupAction,\n    welcomeMessage\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {\n      chatOpen: chatOpen,\n      setChatOpen: setChatOpen,\n      messages: messages,\n      setMessages: setMessages,\n      input: input,\n      setInput: setInput,\n      loading: loading,\n      setLoading: setLoading,\n      audioRef: audioRef,\n      messagesEndRef: messagesEndRef,\n      uploadedFile: uploadedFile,\n      setUploadedFile: setUploadedFile,\n      actionLoading: actionLoading,\n      setActionLoading: setActionLoading,\n      followupActions: followupActions,\n      setFollowupActions: setFollowupActions,\n      followupError: followupError,\n      setFollowupError: setFollowupError,\n      followupMessageIdx: followupMessageIdx,\n      setFollowupMessageIdx: setFollowupMessageIdx,\n      buttonClickedIdx: buttonClickedIdx,\n      setButtonClickedIdx: setButtonClickedIdx,\n      sendMessage: sendMessage,\n      handleFileUpload: handleFileUpload,\n      handleGenerate: handleGenerate,\n      handleFollowupAction: handleFollowupAction,\n      welcomeMessage: welcomeMessage,\n      activityLogsRefreshKey: activityLogsRefreshKey,\n      chatProps: chatProps,\n      themeMode: themeMode,\n      setThemeMode: setThemeMode,\n      sidebarCollapsed: sidebarCollapsed,\n      setSidebarCollapsed: setSidebarCollapsed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"KkRcCx+yNSI0zz1nJIq8qBoW3/M=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"AppRoutes\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","useLocation","Navigate","ThemeProvider","createTheme","CssBaseline","Sidebar","Dashboard","ActivityLogs","Settings","ZapAIFeatures","chatService","logActivity","updateActivityLog","createActivityObject","ActivityTypes","ChatBox","axios","api","TopNavBar","JiraSettings","AIChatbotAssistan","TestDark","MySprint","LiveTest","AutomatedTest","Login","Contactus","MLanalytics","jsxDEV","_jsxDEV","PrivateRoute","children","isLoggedIn","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","AppRoutes","props","_s","location","chatOpen","setChatOpen","messages","setMessages","input","setInput","loading","setLoading","audioRef","messagesEndRef","uploadedFile","setUploadedFile","actionLoading","setActionLoading","followupActions","setFollowupActions","followupError","setFollowupError","followupMessageIdx","setFollowupMessageIdx","buttonClickedIdx","setButtonClickedIdx","sendMessage","handleFileUpload","handleGenerate","handleFollowupAction","welcomeMessage","activityLogsRefreshKey","chatProps","themeMode","setThemeMode","sidebarCollapsed","setSidebarCollapsed","pathname","path","element","className","collapsed","setCollapsed","refreshKey","onClick","title","_c2","App","_s2","id","sender","message","setActivityLogsRefreshKey","document","documentElement","classList","add","remove","console","log","fetch","then","res","json","data","catch","err","error","_messagesEndRef$curre","current","scrollIntoView","behavior","length","play","e","overrideInput","preventDefault","messageToSend","undefined","trim","aiMsg","prev","toLowerCase","includes","activity","TEST_CASE","k","BUG","AUTOMATION_SCRIPT","files","Array","from","target","file","formData","FormData","append","post","headers","url","name","type","fileUrl","startsWith","process","env","REACT_APP_API_URL","PDF_DOCUMENT","USER_STORY","src","alt","style","maxWidth","borderRadius","href","rel","display","alignItems","gap","width","height","fill","viewBox","d","logId","response","activityType","description","Error","generateUserStory","generateTestCase","status","actions","action","content","linkToJira","downloadAsPDF","generateAutomationScript","blob","Blob","window","URL","createObjectURL","a","createElement","download","body","appendChild","click","revokeObjectURL","removeChild","theme","palette","mode","primary","main","secondary","background","default","paper","text","divider","_c3","$RefreshReg$"],"sources":["/Users/pournima/Documents/Zap Portotype/15 june/Zap-Propotype/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Sidebar from './components/Sidebar';\nimport Dashboard from './pages/Dashboard';\nimport ActivityLogs from './pages/ActivityLogs';\nimport Settings from './pages/Settings';\nimport ZapAIFeatures from './pages/ProjectManagement';\nimport { chatService } from './services/api';\nimport { logActivity, updateActivityLog, createActivityObject, ActivityTypes } from './utils/activityLogger';\nimport ChatBox from './components/ChatBox';\nimport axios from 'axios';\nimport api from './services/api';\nimport TopNavBar from './components/TopNavBar';\nimport JiraSettings from './pages/JiraSettings';\nimport AIChatbotAssistan from './pages/AIChatbotAssistan';\nimport TestDark from './pages/TestDark';\nimport MySprint from './pages/MySprint';\nimport LiveTest from './pages/LiveTest';\nimport AutomatedTest from './pages/AutomationTest';\nimport Login from './pages/Login';\nimport Contactus from './pages/Contactus';\n\nimport MLanalytics from './pages/MLanalytics';\n// ...existing code...\n\nfunction PrivateRoute({ children }) {\n  const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n  return isLoggedIn ? children : <Navigate to=\"/login\" replace />;\n}\n\nfunction AppRoutes(props) {\n  const location = useLocation();\n  const {\n    chatOpen, setChatOpen, messages, setMessages, input, setInput, loading, setLoading,\n    audioRef, messagesEndRef, uploadedFile, setUploadedFile, actionLoading, setActionLoading,\n    followupActions, setFollowupActions, followupError, setFollowupError, followupMessageIdx, setFollowupMessageIdx, buttonClickedIdx, setButtonClickedIdx,\n    sendMessage, handleFileUpload, handleGenerate, handleFollowupAction, welcomeMessage, activityLogsRefreshKey, chatProps, themeMode, setThemeMode,\n    sidebarCollapsed, setSidebarCollapsed\n  } = props;\n\n  // If on /login, render only the Login component\n  if (location.pathname === '/login') {\n    return (\n      <Routes>\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    );\n  }\n\n  // Redirect root path '/' to '/login' using React Router\n  if (location.pathname === '/') {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Otherwise, render the full layout\n  return (\n    <div className=\"min-h-screen bg-white text-gray-900 dark:bg-neutral-900 dark:text-gray-100 flex flex-col\">\n      <TopNavBar />\n      <div className=\"flex flex-1 mt-14\">\n        <Sidebar collapsed={sidebarCollapsed} setCollapsed={setSidebarCollapsed} />\n        <main className={`flex-1 overflow-auto transition-all duration-300 ${sidebarCollapsed ? 'ml-16' : 'ml-60'}`}> \n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/dashboard\" element={\n              <PrivateRoute>\n                <Dashboard {...chatProps} />\n              </PrivateRoute>\n            } />\n            <Route path=\"/activity\" element={<ActivityLogs refreshKey={activityLogsRefreshKey} {...chatProps} />} />\n            <Route path=\"/settings\" element={<Settings themeMode={themeMode} setThemeMode={setThemeMode} />} />\n            <Route path=\"/settings/jira\" element={<JiraSettings />} />\n            <Route path=\"/zap-ai-features\" element={<ZapAIFeatures />} />\n            <Route path=\"/live-test/:jiraId\" element={<LiveTest />} />\n            <Route path=\"/live-test\" element={<LiveTest />} />\n            <Route path=\"/ai-chatbot-assistan\" element={<AIChatbotAssistan />} />\n            <Route path=\"/test-dark\" element={<TestDark />} />\n            <Route path=\"/my-sprint\" element={<MySprint />} />\n            <Route path=\"/automatedtest\" element={<AutomatedTest />} />\n            <Route path=\"/AutomationTest\" element={<AutomatedTest />} />\n            <Route path=\"/contactus\" element={<Contactus />} />\n          </Routes>\n          {/* Floating Chat Open Button (global) */}\n          {location.pathname !== '/ai-chatbot-assistan' && !chatOpen && (\n            <button\n              className=\"fixed bottom-8 right-8 z-50 bg-blue-500 text-white rounded-full shadow-lg w-16 h-16 flex items-center justify-center text-3xl hover:bg-blue-600 transition\"\n              onClick={() => setChatOpen(true)}\n              title=\"Open Chat\"\n            >\n              💬\n            </button>\n          )}\n          {/* Global ChatBox UI */}\n          {location.pathname !== '/ai-chatbot-assistan' && <ChatBox {...chatProps} />}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  // Global chat state\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { id: 0, sender: 'ai', message: `👋 Welcome to Zap⚡️ - Your AI Assistant!\\n\\nI can help you with:\\n\\n📝 Test Case Generation:\\n- Generate test cases from user stories\\n- link test cases to user stories\\n- automate test cases\\n\\n🤖 Automation Scripts:\\n- Create automation scripts from test cases or user stories\\n- upload script to project\\n\\n🐞 Bugs Creation:\\n- Create bug from user story\\n- link bug to user story\\n\\n🎑 Image analysis for UI element:\\n- UI element detection\\n- create test case for UI element\\n- create automation script for UI element\\n\\n🔍 How to get started:\\n1. Use 'id ISSUE-ID' to work with a specific issue\\n2. Type 'settings' to configure the application\\n\\nWhat would you like to do today? 🚀` },\n    { id: 1, sender: 'ai', message: 'Hello! How can I help you today?' },\n    { id: 2, sender: 'user', message: 'I need help with my test automation.' },\n    { id: 3, sender: 'ai', message: 'Sure, I can help you with that. What specific issue are you facing?' },\n    { id: 4, sender: 'user', message: 'id SCRUM-1' },\n    { id: 5, sender: 'ai', message: 'User Story: Logout from the App\\nSummary: As a user I want to logout from the App\\nDescription: logout from the app\\nnavigate to setting and click on logout button\\nAcceptance Criteria:\\n.1. The logout button should be visible in the sidebar.\\n.2. The logout button should be clickable.\\n.3. The logout button should logout the user from the app.\\n 👉🏻 To generate a test case for this user story, reply with: Test Case\\n 🐞 To report a bug for this user story, reply with: Bug' },\n    { id: 6, sender: 'user', message: 'bug' },\n    { id: 7, sender: 'ai', message: 'Great, you found a bug! To proceed with bug creation, can you provide as much detail as possible about the bug, please?\\nTo cancel the process, reply with: cancel' },\n    { id: 8, sender: 'user', message: 'Logout Button on Sidebar Not Clickable' },\n    { id: 9, sender: 'ai', message: 'Bug: Logout Button on Sidebar Not Clickable\\nSummary:\\nAs a user, I want to log out of the app using the logout button in the sidebar, but the button is currently not clickable.\\n\\nDescription:\\nThe logout button is visible in the sidebar, but clicking on it does not trigger any action. This prevents users from logging out through the expected interface.\\n\\nSteps to Reproduce:\\n1. Log in to the application.\\n2. Locate the logout button in the sidebar.\\n3. Attempt to click the button.\\n4. Observe that no logout action is performed.\\n\\nExpected Behavior:\\n1. The logout button should be clearly visible.\\n2. The button should be clickable.\\n3. Clicking the button should log the user out, clear the session, and redirect to the login screen.\\n\\nActual Behavior:\\n1. The logout button is visible but not responsive to user interaction.\\n2. No logout or redirection occurs when clicked.\\n\\nSeverity: Major\\nPriority: High\\n\\nEnvironment: [Specify environment, e.g., QA, Staging | Browser: Chrome 123 | OS: Windows 11]\\n\\n 🖼️ Would you like to attach a screenshot to this bug? (reply with: yes or no)' },\n    { id: 10, sender: 'user', message: 'yes' },\n    { id: 11, sender: 'ai', message: '📎 Please upload your screenshot(s) for the bug (max 3). Use the upload image 🏞️ button. When done, reply with: done or yes to create the bug.' },\n    { id: 12, sender: 'user', message: '❌  Image upload failed' },\n    { id: 13, sender: 'ai', message: 'Would you like to try again(Yes), or proceed without uploading an image(No)?.' },\n    { id: 14, sender: 'user', message: 'No' },\n    { id: 15, sender: 'ai', message: '✅ Bug created successfully with ID: SCRUM-11\\n🔗 The bug has been linked to the user story SCRUM-1' },\n    { id: 16, sender: 'ai', message: 'You just created a bug. 🚀 If you want to add more details, please specify, or use a command like \\'create test case\\', \\'create bug\\', \\'create User story\\', \\'create automation script\\', or provide a Jira ID. and follow the instructions.' }\n  ]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false);\n  const [followupActions, setFollowupActions] = useState(null);\n  const [followupError, setFollowupError] = useState(null);\n  const [followupMessageIdx, setFollowupMessageIdx] = useState(null);\n  const [buttonClickedIdx, setButtonClickedIdx] = useState(null);\n  const [activityLogsRefreshKey, setActivityLogsRefreshKey] = useState(0);\n  const [themeMode, setThemeMode] = useState('light');\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  useEffect(() => {\n    if (themeMode === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    console.log('Current <html> class:', document.documentElement.className);\n  }, [themeMode]);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/chat/history')\n      .then(res => res.json())\n      .then(data => setMessages(data))\n      .catch(err => console.error('Error fetching chat history:', err));\n  }, []);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Play sound when a new AI message arrives\n  useEffect(() => {\n    if (\n      chatOpen &&\n      messages.length > 0 &&\n      messages[messages.length - 1].sender === 'ai'\n    ) {\n      audioRef.current && audioRef.current.play().catch((e) => { });\n    }\n  }, [messages, chatOpen]);\n\n  // Chat logic handlers\n  const sendMessage = async (e, overrideInput) => {\n    e.preventDefault();\n    const messageToSend = overrideInput !== undefined ? overrideInput : input;\n    if (!messageToSend.trim()) return;\n    setMessages([...messages, { sender: 'user', message: messageToSend }]);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const res = await chatService.sendMessage(messageToSend);\n      const aiMsg = res.data.message;\n      if (aiMsg && aiMsg.trim()) {\n        setMessages(prev => [...prev, { sender: 'ai', message: aiMsg }]);\n      }\n\n      // --- LOGGING LOGIC: Log based on AI response ---\n      if (res.data.message) {\n        const aiMsg = res.data.message.toLowerCase();\n        if (aiMsg.includes('generated test case')) {\n          const activity = createActivityObject(\n            'Test Case',\n            'AI generated a test case',\n            ActivityTypes.TEST_CASE,\n            'new'\n          );\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        } else if (aiMsg.includes('bug has been created') || aiMsg.includes('bug created')) {\n          const activity = createActivityObject(\n            'Bug',\n            'AI created a bug',\n            ActivityTypes.BUG,\n            'new'\n          );\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        } else if (aiMsg.includes('automation script') && aiMsg.includes('successfully')) {\n          const activity = createActivityObject(\n            'Automation Script',\n            'AI generated an automation script',\n            ActivityTypes.AUTOMATION_SCRIPT,\n            'new'\n          );\n          await logActivity(activity);\n          setActivityLogsRefreshKey(k => k + 1);\n        }\n      }\n      // --- END LOGGING LOGIC ---\n    } catch {\n      setMessages(prev => [...prev, { sender: 'ai', message: 'Error from AI.' }]);\n    }\n    setLoading(false);\n  };\n\n  const handleFileUpload = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    const file = files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await api.post('/api/chat/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      const { url, name, type } = res.data;\n      const fileUrl = url && url.startsWith('/uploads/') ? `${process.env.REACT_APP_API_URL || 'http://localhost:8080'}${url}` : url;\n      setUploadedFile({ name, type, url: fileUrl });\n      const activity = createActivityObject(\n        'File Upload',\n        `Uploaded ${name} (${type})`,\n        type === 'application/pdf' ? ActivityTypes.PDF_DOCUMENT : ActivityTypes.USER_STORY,\n        'new'\n      );\n      await logActivity(activity);\n      setActivityLogsRefreshKey(k => k + 1);\n      if (type && type.startsWith('image/')) {\n        setMessages(prev => [\n          ...prev,\n          { sender: 'user', message: <img src={fileUrl} alt={name} style={{ maxWidth: 200, borderRadius: 8 }} /> },\n          { type: 'fileActions', file: { name, type, url: fileUrl } }\n        ]);\n      } else if (type === 'application/pdf') {\n        setMessages(prev => [\n          ...prev,\n          { sender: 'user', message: (\n            <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n              <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M6 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8.828A2 2 0 0 0 19.414 7.414l-4.828-4.828A2 2 0 0 0 12.172 2H6zm6 1.414L18.586 10H14a2 2 0 0 1-2-2V3.414zM6 4h5v4a4 4 0 0 0 4 4h4v10a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V4z\"/></svg>\n              <span>{name}</span>\n            </a>\n          ) },\n          { type: 'fileActions', file: { name, type, url: fileUrl } }\n        ]);\n      } else {\n        setMessages(prev => [\n          ...prev,\n          { sender: 'user', message: `Unsupported file type: ${name}` },\n          { sender: 'ai', message: 'File uploaded, but no analysis available for this type.' }\n        ]);\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setMessages(prev => [\n        ...prev,\n        { sender: 'ai', message: 'Failed to upload file. Please try again.' }\n      ]);\n    }\n  };\n\n  const handleGenerate = async (type, fileName) => {\n    setActionLoading(true);\n    setFollowupError(null);\n    let logId = null;\n    try {\n      let response;\n      let activityType;\n      let title;\n      let description;\n      switch (type) {\n        case 'userStory':\n          activityType = ActivityTypes.USER_STORY;\n          title = 'User Story';\n          description = `Generating user story from ${fileName}`;\n          break;\n        case 'testCase':\n          activityType = ActivityTypes.TEST_CASE;\n          title = 'Test Case';\n          description = `Generating test case from ${fileName}`;\n          break;\n        default:\n          throw new Error('Invalid generation type');\n      }\n      const activity = createActivityObject(title, description, activityType, 'in progress');\n      const log = await logActivity(activity);\n      logId = log.id;\n      setActivityLogsRefreshKey(k => k + 1);\n      switch (type) {\n        case 'userStory':\n          response = await chatService.generateUserStory(fileName);\n          break;\n        case 'testCase':\n          response = await chatService.generateTestCase(fileName);\n          break;\n      }\n      await updateActivityLog(logId, {\n        status: 'done',\n        description: description.replace('Generating', 'Generated')\n      });\n      const aiMsg = response.data.message;\n      if (aiMsg && aiMsg.trim()) {\n        setMessages(prev => [...prev, { sender: 'ai', message: aiMsg }]);\n      }\n      setFollowupActions(response.data.actions);\n      setFollowupMessageIdx(messages.length);\n    } catch (error) {\n      if (logId) {\n        await updateActivityLog(logId, { status: 'failed' });\n      }\n      console.error('Error generating:', error);\n      setFollowupError('Failed to generate. Please try again.');\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const handleFollowupAction = async (action, content) => {\n    setActionLoading(true);\n    setFollowupError(null);\n    try {\n      let response;\n      let activityType;\n      let title;\n      let description;\n      switch (action) {\n        case 'linkToJira':\n          response = await chatService.linkToJira(content);\n          activityType = ActivityTypes.TEST_CASE;\n          title = 'Jira Integration';\n          description = 'Linked content to Jira';\n          break;\n        case 'downloadAsPDF':\n          response = await chatService.downloadAsPDF(content);\n          activityType = ActivityTypes.PDF_DOCUMENT;\n          title = 'PDF Download';\n          description = 'Downloaded content as PDF';\n          break;\n        case 'generateAutomation':\n          response = await chatService.generateAutomationScript(content);\n          activityType = ActivityTypes.AUTOMATION_SCRIPT;\n          title = 'Automation Script';\n          description = 'Generated automation script';\n          break;\n        default:\n          throw new Error('Invalid action type');\n      }\n      const activity = createActivityObject(title, description, activityType, 'in progress');\n      await logActivity(activity);\n      setActivityLogsRefreshKey(k => k + 1);\n      if (action === 'downloadAsPDF') {\n        const blob = new Blob([response.data], { type: 'application/pdf' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'generated-content.pdf';\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        const aiMsg = response.data.message;\n        if (aiMsg && aiMsg.trim()) {\n          setMessages(prev => [...prev, { sender: 'ai', message: aiMsg }]);\n        }\n      }\n      setFollowupActions(null);\n      setFollowupMessageIdx(null);\n    } catch (error) {\n      console.error('Error performing follow-up action:', error);\n      setFollowupError('Failed to perform action. Please try again.');\n    } finally {\n      setActionLoading(false);\n    }\n  };\n\n  const welcomeMessage = `👋 Welcome to Zap⚡️ - Your AI Testing Assistant!\\n\\nI can help you with:\\n\\n📝 Test Case Generation:\\n   - Generate test cases from user stories\\n   - link test cases to user stories\\n   - automate test cases\\n\\n🤖 Automation Scripts:\\n   - Create automation scripts from test cases or user stories\\n   - upload script to project\\n\\n🐞 Bugs Creation:\\n   - Create bug from user story\\n   - link bug to user story\\n\\n🎑 Image analysis for UI element:\\n   - UI element detection\\n   - create test case for UI element\\n   - create automation script for UI element\\n\\n🔍 How to get started:\\n1. Use 'id ISSUE-ID' to work with a specific issue\\n2. Type 'settings' to configure the application\\n\\nWhat would you like to do today? 🚀`;\n\n  const theme = createTheme({\n    palette: {\n      mode: themeMode,\n      primary: { main: '#0ea5e9' },\n      secondary: { main: '#64748b' },\n      background: {\n        default: themeMode === 'dark' ? '#181A1B' : '#fff',\n        paper: themeMode === 'dark' ? '#23272f' : '#fff',\n      },\n      text: {\n        primary: themeMode === 'dark' ? '#F4F5F7' : '#1A1E1D',\n        secondary: themeMode === 'dark' ? '#B3B8C2' : '#4B5563',\n      },\n      divider: themeMode === 'dark' ? '#23272f' : '#E5E7EB',\n    },\n  });\n\n  // Props to pass to chat-enabled pages and ChatBox\n  const chatProps = {\n    chatOpen, setChatOpen, messages, setMessages, input, setInput, loading, setLoading,\n    audioRef, messagesEndRef, uploadedFile, setUploadedFile, actionLoading, setActionLoading,\n    followupActions, setFollowupActions, followupError, setFollowupError, followupMessageIdx, setFollowupMessageIdx, buttonClickedIdx, setButtonClickedIdx,\n    sendMessage, handleFileUpload, handleGenerate, handleFollowupAction, welcomeMessage\n  };\n\n  return (\n    <Router>\n      <AppRoutes\n        chatOpen={chatOpen}\n        setChatOpen={setChatOpen}\n        messages={messages}\n        setMessages={setMessages}\n        input={input}\n        setInput={setInput}\n        loading={loading}\n        setLoading={setLoading}\n        audioRef={audioRef}\n        messagesEndRef={messagesEndRef}\n        uploadedFile={uploadedFile}\n        setUploadedFile={setUploadedFile}\n        actionLoading={actionLoading}\n        setActionLoading={setActionLoading}\n        followupActions={followupActions}\n        setFollowupActions={setFollowupActions}\n        followupError={followupError}\n        setFollowupError={setFollowupError}\n        followupMessageIdx={followupMessageIdx}\n        setFollowupMessageIdx={setFollowupMessageIdx}\n        buttonClickedIdx={buttonClickedIdx}\n        setButtonClickedIdx={setButtonClickedIdx}\n        sendMessage={sendMessage}\n        handleFileUpload={handleFileUpload}\n        handleGenerate={handleGenerate}\n        handleFollowupAction={handleFollowupAction}\n        welcomeMessage={welcomeMessage}\n        activityLogsRefreshKey={activityLogsRefreshKey}\n        chatProps={chatProps}\n        themeMode={themeMode}\n        setThemeMode={setThemeMode}\n        sidebarCollapsed={sidebarCollapsed}\n        setSidebarCollapsed={setSidebarCollapsed}\n      />\n    </Router>\n  );\n}\n\nexport default App; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}